D G "__PCH__" 0 106 ""5.065d""
D G "__DEVICE__" 0 106 "458"
D G "__DATE__" 0 106 ""15-mai-17""
D G "__TIME__" 0 106 ""16:29:15""
D G "_UNICODE" 0 106 ""?""
D G "__EVAL" 0 106 ""?"" "Standard Header file for the PIC18F458 device ////////////////"
c L "set_tris_a" 2 3 6 "FUNCTION"
f N "set_tris_a" 2 40 ""
v L "value" 2 40 "int8" `54 
f B "set_tris_a" 2 40 "void(int8 value)" `53 
f N "set_tris_b" 2 41 ""
v L "value" 2 41 "int8" `56 
f B "set_tris_b" 2 41 "void(int8 value)" `55 
f N "set_tris_c" 2 42 ""
v L "value" 2 42 "int8" `58 
f B "set_tris_c" 2 42 "void(int8 value)" `57 
f N "set_tris_d" 2 43 ""
v L "value" 2 43 "int8" `60 
f B "set_tris_d" 2 43 "void(int8 value)" `59 
f N "set_tris_e" 2 44 ""
v L "value" 2 44 "int8" `62 
f B "set_tris_e" 2 44 "void(int8 value)" `61 
f N "get_tris_a" 2 45 ""
f B "get_tris_a" 2 45 "int8()" `63 
f N "get_tris_b" 2 46 ""
f B "get_tris_b" 2 46 "int8()" `64 
f N "get_tris_c" 2 47 ""
f B "get_tris_c" 2 47 "int8()" `65 
f N "get_tris_d" 2 48 ""
f B "get_tris_d" 2 48 "int8()" `66 
f N "get_tris_e" 2 49 ""
f B "get_tris_e" 2 49 "int8()" `67 
f N "output_a" 2 50 ""
v L "value" 2 50 "int8" `69 
f B "output_a" 2 50 "void(int8 value)" `68 
f N "output_b" 2 51 ""
v L "value" 2 51 "int8" `71 
f B "output_b" 2 51 "void(int8 value)" `70 
f N "output_c" 2 52 ""
v L "value" 2 52 "int8" `73 
f B "output_c" 2 52 "void(int8 value)" `72 
f N "output_d" 2 53 ""
v L "value" 2 53 "int8" `75 
f B "output_d" 2 53 "void(int8 value)" `74 
f N "output_e" 2 54 ""
v L "value" 2 54 "int8" `77 
f B "output_e" 2 54 "void(int8 value)" `76 
f N "input_a" 2 55 ""
f B "input_a" 2 55 "int8()" `78 
f N "input_b" 2 56 ""
f B "input_b" 2 56 "int8()" `79 
f N "input_c" 2 57 ""
f B "input_c" 2 57 "int8()" `80 
f N "input_d" 2 58 ""
f B "input_d" 2 58 "int8()" `81 
f N "input_e" 2 59 ""
f B "input_e" 2 59 "int8()" `82 
f N "input_change_a" 2 60 ""
f B "input_change_a" 2 60 "int8()" `83 
f N "input_change_b" 2 61 ""
f B "input_change_b" 2 61 "int8()" `84 
f N "input_change_c" 2 62 ""
f B "input_change_c" 2 62 "int8()" `85 
f N "input_change_d" 2 63 ""
f B "input_change_d" 2 63 "int8()" `86 
f N "input_change_e" 2 64 ""
f B "input_change_e" 2 64 "int8()" `87 
f N "port_b_pullups" 2 65 ""
v L "value" 2 65 "int8" `89 
f B "port_b_pullups" 2 65 "void(int8 value)" `88 
f N "input" 2 66 ""
v L "pin" 2 66 "int16" `91 
f B "input" 2 66 "int8(int16 pin)" `90 
f N "input_state" 2 67 ""
v L "pin" 2 67 "int16" `93 
f B "input_state" 2 67 "int8(int16 pin)" `92 
f N "output_low" 2 68 ""
v L "pin" 2 68 "int16" `95 
f B "output_low" 2 68 "void(int16 pin)" `94 
f N "output_high" 2 69 ""
v L "pin" 2 69 "int16" `97 
f B "output_high" 2 69 "void(int16 pin)" `96 
f N "output_toggle" 2 70 ""
v L "pin" 2 70 "int16" `99 
f B "output_toggle" 2 70 "void(int16 pin)" `98 
f N "output_bit" 2 71 ""
v L "pin" 2 71 "int16" `101 
v L "level" 2 71 "int8" `102 
f B "output_bit" 2 71 "void(int16 pin,int8 level)" `100 
f N "output_float" 2 72 ""
v L "pin" 2 72 "int16" `104 
f B "output_float" 2 72 "void(int16 pin)" `103 
f N "output_drive" 2 73 ""
v L "pin" 2 73 "int16" `106 
f B "output_drive" 2 73 "void(int16 pin)" `105  "Constants used to identify pins in the above are:"
d G "PIN_A0" 2 77 "31744"
d G "PIN_A1" 2 78 "31745"
d G "PIN_A2" 2 79 "31746"
d G "PIN_A3" 2 80 "31747"
d G "PIN_A4" 2 81 "31748"
d G "PIN_A5" 2 82 "31749"
d G "PIN_A6" 2 83 "31750"
d G "PIN_B0" 2 85 "31752"
d G "PIN_B1" 2 86 "31753"
d G "PIN_B2" 2 87 "31754"
d G "PIN_B3" 2 88 "31755"
d G "PIN_B4" 2 89 "31756"
d G "PIN_B5" 2 90 "31757"
d G "PIN_B6" 2 91 "31758"
d G "PIN_B7" 2 92 "31759"
d G "PIN_C0" 2 94 "31760"
d G "PIN_C1" 2 95 "31761"
d G "PIN_C2" 2 96 "31762"
d G "PIN_C3" 2 97 "31763"
d G "PIN_C4" 2 98 "31764"
d G "PIN_C5" 2 99 "31765"
d G "PIN_C6" 2 100 "31766"
d G "PIN_C7" 2 101 "31767"
d G "PIN_D0" 2 103 "31768"
d G "PIN_D1" 2 104 "31769"
d G "PIN_D2" 2 105 "31770"
d G "PIN_D3" 2 106 "31771"
d G "PIN_D4" 2 107 "31772"
d G "PIN_D5" 2 108 "31773"
d G "PIN_D6" 2 109 "31774"
d G "PIN_D7" 2 110 "31775"
d G "PIN_E0" 2 112 "31776"
d G "PIN_E1" 2 113 "31777"
d G "PIN_E2" 2 114 "31778"
d G "FALSE" 2 117 "0"
d G "TRUE" 2 118 "1"
d G "BYTE" 2 120 "int8"
d G "BOOLEAN" 2 121 "int1"
d G "getc" 2 123 "getch"
d G "fgetc" 2 124 "getch"
d G "getchar" 2 125 "getch"
d G "putc" 2 126 "putchar"
d G "fputc" 2 127 "putchar"
d G "fgets" 2 128 "gets"
d G "fputs" 2 129 "puts"
c L "output_drive" 2 3 3 "FUNCTION"
f N "restart_cause" 2 134 ""
f B "restart_cause" 2 134 "int8()" `107 
f N "reset_cpu" 2 135 ""
f B "reset_cpu" 2 135 "void()" `108 
f N "sleep" 2 136 ""
f B "sleep" 2 136 "void()" `109  "Constants returned from RESTART_CAUSE() are:"
d G "WDT_TIMEOUT" 2 138 "7"
d G "MCLR_FROM_SLEEP" 2 139 "11"
d G "MCLR_FROM_RUN" 2 140 "15"
d G "NORMAL_POWER_UP" 2 141 "12"
d G "BROWNOUT_RESTART" 2 142 "14"
d G "WDT_FROM_SLEEP" 2 143 "3"
d G "RESET_INSTRUCTION" 2 144 "0"
c L "sleep" 2 3 5 "FUNCTION"
f N "setup_timer_0" 2 151 ""
v L "mode" 2 151 "int8" `111 
f B "setup_timer_0" 2 151 "void(int8 mode)" `110 
f N "set_timer0" 2 152 ""
v L "value" 2 152 "int16" `113 
f B "set_timer0" 2 152 "void(int16 value)" `112 
f N "get_timer0" 2 153 ""
f B "get_timer0" 2 153 "int16()" `114 
f N "setup_counters" 2 154 ""
v L "mode" 2 154 "int8" `116 
v L "prescaler" 2 154 "int8" `117 
f B "setup_counters" 2 154 "void(int8 mode,int8 prescaler)" `115 
f N "set_rtcc" 2 155 ""
v L "value" 2 155 "int16" `119 
f B "set_rtcc" 2 155 "void(int16 value)" `118 
f N "get_rtcc" 2 156 ""
f B "get_rtcc" 2 156 "int16()" `120  "Constants used for SETUP_TIMER_0() are:"
d G "T0_INTERNAL" 2 158 "0"
d G "T0_EXT_L_TO_H" 2 159 "32"
d G "T0_EXT_H_TO_L" 2 160 "48"
d G "T0_DIV_1" 2 162 "8"
d G "T0_DIV_2" 2 163 "0"
d G "T0_DIV_4" 2 164 "1"
d G "T0_DIV_8" 2 165 "2"
d G "T0_DIV_16" 2 166 "3"
d G "T0_DIV_32" 2 167 "4"
d G "T0_DIV_64" 2 168 "5"
d G "T0_DIV_128" 2 169 "6"
d G "T0_DIV_256" 2 170 "7"
d G "T0_OFF" 2 172 "0x80"
d G "T0_8_BIT" 2 174 "0x40"
d G "RTCC_INTERNAL" 2 178 "0"
d G "RTCC_EXT_L_TO_H" 2 179 "32"
d G "RTCC_EXT_H_TO_L" 2 180 "48"
d G "RTCC_DIV_1" 2 181 "8"
d G "RTCC_DIV_2" 2 182 "0"
d G "RTCC_DIV_4" 2 183 "1"
d G "RTCC_DIV_8" 2 184 "2"
d G "RTCC_DIV_16" 2 185 "3"
d G "RTCC_DIV_32" 2 186 "4"
d G "RTCC_DIV_64" 2 187 "5"
d G "RTCC_DIV_128" 2 188 "6"
d G "RTCC_DIV_256" 2 189 "7"
d G "RTCC_OFF" 2 190 "0x80"
d G "RTCC_8_BIT" 2 191 "0x40"
c L "get_rtcc" 2 3 8 "FUNCTION"
f N "setup_wdt" 2 202 ""
v L "mode" 2 202 "int16" `122 
f B "setup_wdt" 2 202 "void(int16 mode)" `121 
f N "restart_wdt" 2 203 ""
f B "restart_wdt" 2 203 "void()" `123  "Constants used for SETUP_WDT() are:"
d G "WDT_ON" 2 205 "0x100"
d G "WDT_OFF" 2 206 "0"
d G "WDT_18MS" 2 208 "0x300"
d G "WDT_36MS" 2 209 "0x500"
d G "WDT_72MS" 2 210 "0x700"
d G "WDT_144MS" 2 211 "0x900"
d G "WDT_288MS" 2 212 "0xB00"
d G "WDT_576MS" 2 213 "0xD00"
d G "WDT_1152MS" 2 214 "0xF00"
d G "WDT_2304MS" 2 215 "0x1108"
c L "restart_wdt" 2 3 3 "FUNCTION"
f N "setup_timer_1" 2 221 ""
v L "mode" 2 221 "int16" `125 
f B "setup_timer_1" 2 221 "void(int16 mode)" `124 
f N "get_timer1" 2 222 ""
f B "get_timer1" 2 222 "int16()" `126 
f N "set_timer1" 2 223 ""
v L "value" 2 223 "int16" `128 
f B "set_timer1" 2 223 "void(int16 value)" `127  "Constants used for SETUP_TIMER_1() are:"
d G "T1_DISABLED" 2 226 "0"
d G "T1_INTERNAL" 2 227 "0x85"
d G "T1_EXTERNAL" 2 228 "0x87"
d G "T1_EXTERNAL_SYNC" 2 229 "0x83"
d G "T1_CLK_OUT" 2 231 "8"
d G "T1_DIV_BY_1" 2 233 "0"
d G "T1_DIV_BY_2" 2 234 "0x10"
d G "T1_DIV_BY_4" 2 235 "0x20"
d G "T1_DIV_BY_8" 2 236 "0x30"
c L "set_timer1" 2 3 3 "FUNCTION"
f N "setup_timer_2" 2 241 ""
v L "mode" 2 241 "int8" `130 
v L "period" 2 241 "int8" `131 
v L "postscale" 2 241 "int8" `132 
f B "setup_timer_2" 2 241 "void(int8 mode,int8 period,int8 postscale)" `129 
f N "get_timer2" 2 242 ""
f B "get_timer2" 2 242 "int8()" `133 
f N "set_timer2" 2 243 ""
v L "value" 2 243 "int8" `135 
f B "set_timer2" 2 243 "void(int8 value)" `134  "Constants used for SETUP_TIMER_2() are:"
d G "T2_DISABLED" 2 245 "0"
d G "T2_DIV_BY_1" 2 246 "4"
d G "T2_DIV_BY_4" 2 247 "5"
d G "T2_DIV_BY_16" 2 248 "6"
c L "set_timer2" 2 3 3 "FUNCTION"
f N "setup_timer_3" 2 253 ""
v L "mode" 2 253 "int16" `137 
f B "setup_timer_3" 2 253 "void(int16 mode)" `136 
f N "get_timer3" 2 254 ""
f B "get_timer3" 2 254 "int16()" `138 
f N "set_timer3" 2 255 ""
v L "value" 2 255 "int16" `140 
f B "set_timer3" 2 255 "void(int16 value)" `139  "Constants used for SETUP_TIMER_3() are:"
d G "T3_DISABLED" 2 258 "0"
d G "T3_INTERNAL" 2 259 "0x85"
d G "T3_EXTERNAL" 2 260 "0x87"
d G "T3_EXTERNAL_SYNC" 2 261 "0x83"
d G "T3_DIV_BY_1" 2 263 "0"
d G "T3_DIV_BY_2" 2 264 "0x10"
d G "T3_DIV_BY_4" 2 265 "0x20"
d G "T3_DIV_BY_8" 2 266 "0x30"
d G "T3_CCP1_TO_2" 2 269 "0x48"
d G "T3_CCP2" 2 270 "0x8"
c L "set_timer3" 2 3 4 "FUNCTION"
f N "setup_ccp1" 2 276 ""
v L "mode" 2 276 "int32" `142 
f B "setup_ccp1" 2 276 "void(int32 mode)" `141 
f N "setup_ccp1" 2 277 ""
v L "mode" 2 277 "int32" `144 
v L "pwm" 2 277 "int8" `145 
f B "setup_ccp1" 2 277 "void(int32 mode,int8 pwm)" `143 
f N "set_pwm1_duty" 2 278 ""
v L "value" 2 278 "int16" `147 
f B "set_pwm1_duty" 2 278 "void(int16 value)" `146  "Constants used for SETUP_CCPx() are:"
d G "CCP_OFF" 2 280 "0"
d G "CCP_CAPTURE_FE" 2 281 "0x04"
d G "CCP_CAPTURE_RE" 2 282 "0x05"
d G "CCP_CAPTURE_DIV_4" 2 283 "0x06"
d G "CCP_CAPTURE_DIV_16" 2 284 "0x07"
d G "CCP_COMPARE_SET_ON_MATCH" 2 285 "0x08"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 286 "0x09"
d G "CCP_COMPARE_INT" 2 287 "0x0A"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 288 "0x02"
d G "CCP_COMPARE_RESET_TIMER" 2 289 "0x0B"
d G "CCP_PWM" 2 290 "0x0C"
d G "CCP_PWM_PLUS_1" 2 291 "0x1c"
d G "CCP_PWM_PLUS_2" 2 292 "0x2c"
d G "CCP_PWM_PLUS_3" 2 293 "0x3c"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
d G "CCP_PWM_H_H" 2 300 "0x0c"
d G "CCP_PWM_H_L" 2 301 "0x0d"
d G "CCP_PWM_L_H" 2 302 "0x0e"
d G "CCP_PWM_L_L" 2 303 "0x0f"
d G "CCP_PWM_FULL_BRIDGE" 2 305 "0x40"
d G "CCP_PWM_FULL_BRIDGE_REV" 2 306 "0xC0"
d G "CCP_PWM_HALF_BRIDGE" 2 307 "0x80"
d G "CCP_SHUTDOWN_ON_COMP1" 2 309 "0x100000"
d G "CCP_SHUTDOWN_ON_COMP2" 2 310 "0x200000"
d G "CCP_SHUTDOWN_ON_COMP" 2 311 "0x300000"
d G "CCP_SHUTDOWN_ON_INT0" 2 312 "0x400000"
d G "CCP_SHUTDOWN_ON_COMP1_INT0" 2 313 "0x500000"
d G "CCP_SHUTDOWN_ON_COMP2_INT0" 2 314 "0x600000"
d G "CCP_SHUTDOWN_ON_COMP_INT0" 2 315 "0x700000"
d G "CCP_SHUTDOWN_AC_L" 2 317 "0x000000"
d G "CCP_SHUTDOWN_AC_H" 2 318 "0x040000"
d G "CCP_SHUTDOWN_AC_F" 2 319 "0x080000"
d G "CCP_SHUTDOWN_BD_L" 2 321 "0x000000"
d G "CCP_SHUTDOWN_BD_H" 2 322 "0x010000"
d G "CCP_SHUTDOWN_BD_F" 2 323 "0x020000"
d G "CCP_SHUTDOWN_RESTART" 2 325 "0x80000000"
c L "set_pwm1_duty" 2 3 1 "FUNCTION"
f N "setup_ccp2" 2 329 ""
v L "mode" 2 329 "int32" `152 
f B "setup_ccp2" 2 329 "void(int32 mode)" `151 
f N "setup_ccp2" 2 330 ""
v L "mode" 2 330 "int32" `154 
v L "pwm" 2 330 "int8" `155 
f B "setup_ccp2" 2 330 "void(int32 mode,int8 pwm)" `153 
f N "set_pwm2_duty" 2 331 ""
v L "value" 2 331 "int16" `157 
f B "set_pwm2_duty" 2 331 "void(int16 value)" `156 
c L "set_pwm2_duty" 2 3 5 "FUNCTION"
f N "setup_psp" 2 340 ""
v L "mode" 2 340 "int8" `162 
f B "setup_psp" 2 340 "void(int8 mode)" `161 
f N "psp_output_full" 2 341 ""
f B "psp_output_full" 2 341 "int8()" `163 
f N "psp_input_full" 2 342 ""
f B "psp_input_full" 2 342 "int8()" `164 
f N "psp_overflow" 2 343 ""
f B "psp_overflow" 2 343 "int8()" `165  "Constants used in SETUP_PSP() are:"
d G "PSP_ENABLED" 2 345 "0x10"
d G "PSP_DISABLED" 2 346 "0"
c L "psp_overflow" 2 3 3 "FUNCTION"
f N "setup_spi" 2 353 ""
v L "mode" 2 353 "int32" `168 
f B "setup_spi" 2 353 "void(int32 mode)" `167 
f N "spi_write" 2 354 ""
v L "value" 2 354 "int8" `170 
f B "spi_write" 2 354 "void(int8 value)" `169 
f N "spi_read" 2 355 ""
f B "spi_read" 2 355 "int8()" `171 
f N "spi_read" 2 356 ""
v L "value" 2 356 "int8" `173 
f B "spi_read" 2 356 "int8(int8 value)" `172 
f N "spi_data_is_in" 2 357 ""
f B "spi_data_is_in" 2 357 "int8()" `174 
f N "setup_spi2" 2 358 ""
v L "mode" 2 358 "int32" `176 
f B "setup_spi2" 2 358 "void(int32 mode)" `175 
f N "spi_write2" 2 359 ""
v L "value" 2 359 "int8" `178 
f B "spi_write2" 2 359 "void(int8 value)" `177 
f N "spi_read2" 2 360 ""
f B "spi_read2" 2 360 "int8()" `179 
f N "spi_read2" 2 361 ""
v L "value" 2 361 "int8" `181 
f B "spi_read2" 2 361 "int8(int8 value)" `180 
f N "spi_data_is_in2" 2 362 ""
f B "spi_data_is_in2" 2 362 "int8()" `182  "Constants used in SETUP_SPI() are:"
d G "SPI_DISABLED" 2 364 "0x00"
d G "SPI_MASTER" 2 365 "0x20"
d G "SPI_SLAVE" 2 366 "0x24"
d G "SPI_SCK_IDLE_HIGH" 2 367 "0x10"
d G "SPI_SCK_IDLE_LOW" 2 368 "0x00"
d G "SPI_CLK_DIV_4" 2 369 "0x00"
d G "SPI_CLK_DIV_16" 2 370 "0x01"
d G "SPI_CLK_DIV_64" 2 371 "0x02"
d G "SPI_CLK_T2" 2 372 "0x03"
d G "SPI_SS_DISABLED" 2 373 "0x01"
d G "SPI_XMIT_L_TO_H" 2 375 "0x4000"
d G "SPI_XMIT_H_TO_L" 2 376 "0x0000"
d G "SPI_SAMPLE_AT_MIDDLE" 2 378 "0x0000"
d G "SPI_SAMPLE_AT_END" 2 379 "0x8000"
d G "SPI_L_TO_H" 2 382 "SPI_SCK_IDLE_LOW"
d G "SPI_H_TO_L" 2 383 "SPI_SCK_IDLE_HIGH"
c L "spi_data_is_in2" 2 3 2 "FUNCTION"
f N "setup_uart" 2 387 ""
v L "baud" 2 387 "int32" `184 
f B "setup_uart" 2 387 "void(int32 baud)" `183 
f N "setup_uart" 2 388 ""
v L "baud" 2 388 "int32" `186 
v L "stream" 2 388 "int8" `187 
f B "setup_uart" 2 388 "void(int32 baud,int8 stream)" `185 
f N "setup_uart" 2 389 ""
v L "baud" 2 389 "int32" `189 
v L "stream" 2 389 "int8" `190 
v L "clock" 2 389 "int32" `191 
f B "setup_uart" 2 389 "void(int32 baud,int8 stream,int32 clock)" `188 
f N "set_uart_speed" 2 390 ""
v L "baud" 2 390 "int32" `193 
f B "set_uart_speed" 2 390 "void(int32 baud)" `192 
f N "set_uart_speed" 2 391 ""
v L "baud" 2 391 "int32" `195 
v L "stream" 2 391 "int8" `196 
f B "set_uart_speed" 2 391 "void(int32 baud,int8 stream)" `194 
f N "set_uart_speed" 2 392 ""
v L "baud" 2 392 "int32" `198 
v L "stream" 2 392 "int8" `199 
v L "clock" 2 392 "int32" `200 
f B "set_uart_speed" 2 392 "void(int32 baud,int8 stream,int32 clock)" `197  "Constants used in setup_uart() are:"
d G "UART_ADDRESS" 2 396 "2"
d G "UART_DATA" 2 397 "4"
c L "set_uart_speed" 2 3 3 "FUNCTION"
f N "setup_comparator" 2 401 ""
v L "mode" 2 401 "int32" `202 
f B "setup_comparator" 2 401 "void(int32 mode)" `201  "Constants used in setup_comparator() are:"
d G "D1_D0_D3_D0" 2 403 "0x0Bff04"
d G "D1_D0_D3_D2_OUT_ON_E1_E2" 2 404 "0x0FF903"
d G "D1_D0_D3_D0_OUT_ON_E1_E2" 2 405 "0x0BF905"
d G "NC_NC_NC_NC" 2 406 "0x00ff07"
d G "D1_D0_D3_D2" 2 407 "0x0Fff02"
d G "D1_D0_NC_NC_OUT_ON_E1" 2 408 "0x03FD01"
d G "D1_VR_D3_VR" 2 409 "0x0Aff06"
d G "D0_VR_D2_VR" 2 410 "0x05ff0e"
d G "CP1_INVERT" 2 411 "0x0000010"
d G "CP2_INVERT" 2 412 "0x0000020"
c L "setup_comparator" 2 3 2 "FUNCTION"
f N "setup_vref" 2 419 ""
v L "mode" 2 419 "int8" `206 
f B "setup_vref" 2 419 "void(int8 mode)" `205  "Constants used in setup_vref() are:"
d G "VREF_LOW" 2 421 "0xa0"
d G "VREF_HIGH" 2 422 "0x80"
d G "VREF_F5" 2 424 "0x40"
d G "VREF_COMP" 2 425 "0x10"
c L "setup_vref" 2 3 2 "FUNCTION"
f N "setup_low_volt_detect" 2 429 ""
v L "mode" 2 429 "int8" `208 
f B "setup_low_volt_detect" 2 429 "void(int8 mode)" `207  "Constants used in setup_low_volt_detect() are:"
d G "LVD_LVDIN" 2 431 "0x1F"
d G "LVD_45" 2 432 "0x1E"
d G "LVD_42" 2 433 "0x1D"
d G "LVD_40" 2 434 "0x1C"
d G "LVD_38" 2 435 "0x1B"
d G "LVD_36" 2 436 "0x1A"
d G "LVD_35" 2 437 "0x19"
d G "LVD_33" 2 438 "0x18"
d G "LVD_30" 2 439 "0x17"
d G "LVD_28" 2 440 "0x16"
d G "LVD_27" 2 441 "0x15"
d G "LVD_25" 2 442 "0x14"
d G "LVD_23" 2 443 "0x13"
d G "LVD_21" 2 444 "0x12"
d G "LVD_19" 2 445 "0x11"
c L "setup_low_volt_detect" 2 3 2 "FUNCTION"
f N "setup_oscillator" 2 450 ""
v L "mode" 2 450 "int8" `210 
f B "setup_oscillator" 2 450 "void(int8 mode)" `209  "Constants used in setup_oscillator() are:"
d G "OSC_TIMER1" 2 452 "1"
d G "OSC_NORMAL" 2 453 "0"
c L "setup_oscillator" 2 3 4 "FUNCTION"
f N "setup_adc" 2 460 ""
v L "mode" 2 460 "int32" `212 
f B "setup_adc" 2 460 "void(int32 mode)" `211 
f N "read_adc" 2 461 ""
f B "read_adc" 2 461 "int8()" `213 
f N "read_adc" 2 462 ""
v L "mode" 2 462 "int8" `215 
f B "read_adc" 2 462 "int8(int8 mode)" `214 
f N "read_adc" 2 463 ""
f G "read_adc" 2 463 "int16()" `216 
f N "read_adc" 2 464 ""
v L "mode" 2 464 "int8" `217 
f G "read_adc" 2 464 "int16(int8 mode,int8 setting)" `216 
f N "adc_done" 2 465 ""
f B "adc_done" 2 465 "int8(int8 mode,int8 setting)" `216  "Constants used for SETUP_ADC() are:"
d G "ADC_OFF" 2 467 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 468 "0x10000"
d G "ADC_CLOCK_DIV_4" 2 469 "0x4000"
d G "ADC_CLOCK_DIV_8" 2 470 "0x0040"
d G "ADC_CLOCK_DIV_16" 2 471 "0x4040"
d G "ADC_CLOCK_DIV_32" 2 472 "0x0080"
d G "ADC_CLOCK_DIV_64" 2 473 "0x4080"
d G "ADC_CLOCK_INTERNAL" 2 474 "0x00c0" "Internal 2-6us"
c L "adc_done" 2 3 1 "FUNCTION"
f N "setup_adc_ports" 2 477 ""
v L "setting" 2 477 "int8" `218 
f B "setup_adc_ports" 2 477 "void(int8 setting)" `217 
f N "set_analog_pins" 2 478 ""
v L "setting" 2 478 "int8" `220 
f B "set_analog_pins" 2 478 "void(int8 setting)" `219 
f N "set_adc_channel" 2 479 ""
v L "channel" 2 479 "int8" `222 
f B "set_adc_channel" 2 479 "void(int8 channel)" `221  "Constants used in SETUP_ADC_PORTS() and SET_ANALOG_PINS() are:"
d G "NO_ANALOGS" 2 481 "7" "None"
d G "ALL_ANALOG" 2 482 "0" "A0 A1 A2 A3 A5 E0 E1 E2"
d G "AN0_AN1_AN2_AN4_AN5_AN6_AN7_VSS_VREF" 2 483 "1" "A0 A1 A2 A5 E0 E1 E2 VRefh=A3"
d G "AN0_AN1_AN2_AN3_AN4" 2 484 "2" "A0 A1 A2 A3 A5"
d G "AN0_AN1_AN2_AN4_VSS_VREF" 2 485 "3" "A0 A1 A2 A4 VRefh=A3"
d G "AN0_AN1_AN3" 2 486 "4" "A0 A1 A3"
d G "AN0_AN1_VSS_VREF" 2 487 "5" "A0 A1 VRefh=A3"
d G "AN0_AN1_AN4_AN5_AN6_AN7_VREF_VREF" 2 488 "0x08" "A0 A1 A5 E0 E1 E2 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN2_AN3_AN4_AN5" 2 489 "0x09" "A0 A1 A2 A3 A5 E0"
d G "AN0_AN1_AN2_AN4_AN5_VSS_VREF" 2 490 "0x0A" "A0 A1 A2 A5 E0 VRefh=A3"
d G "AN0_AN1_AN4_AN5_VREF_VREF" 2 491 "0x0B" "A0 A1 A5 E0 VRefh=A3 VRefl=A2"
d G "AN0_AN1_AN4_VREF_VREF" 2 492 "0x0C" "A0 A1 A4 VRefh=A3 VRefl=A2"
d G "AN0_AN1_VREF_VREF" 2 493 "0x0D" "A0 A1 VRefh=A3 VRefl=A2"
d G "AN0" 2 494 "0x0E" "A0"
d G "AN0_VREF_VREF" 2 495 "0x0F" "A0 VRefh=A3 VRefl=A2"
d G "ANALOG_RA3_REF" 2 496 "0x1" "!old only provided for compatibility"
d G "A_ANALOG" 2 497 "0x2" "!old only provided for compatibility"
d G "A_ANALOG_RA3_REF" 2 498 "0x3" "!old only provided for compatibility"
d G "RA0_RA1_RA3_ANALOG" 2 499 "0x4" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_REF" 2 500 "0x5" "!old only provided for compatibility"
d G "ANALOG_RA3_RA2_REF" 2 501 "0x8" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2" 2 502 "0x9" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3" 2 503 "0xA" "!old only provided for compatibility"
d G "ANALOG_NOT_RE1_RE2_REF_RA3_RA2" 2 504 "0xB" "!old only provided for compatibility"
d G "A_ANALOG_RA3_RA2_REF" 2 505 "0xC" "!old only provided for compatibility"
d G "RA0_RA1_ANALOG_RA3_RA2_REF" 2 506 "0xD" "!old only provided for compatibility"
d G "RA0_ANALOG" 2 507 "0xE" "!old only provided for compatibility"
d G "RA0_ANALOG_RA3_RA2_REF" 2 508 "0xF" "!old only provided for compatibility"
d G "ADC_START_AND_READ" 2 511 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 512 "1"
d G "ADC_READ_ONLY" 2 513 "6"
c L "set_adc_channel" 2 3 3 "FUNCTION"
f N "abs" 2 519 ""
v L "x" 2 519 "sint8" `224 
f B "abs" 2 519 "sint8(sint8 x)" `223 
f N "abs" 2 520 ""
v L "x" 2 520 "sint16" `226 
f B "abs" 2 520 "sint16(sint16 x)" `225 
f N "abs" 2 521 ""
v L "x" 2 521 "sint32" `228 
f B "abs" 2 521 "sint32(sint32 x)" `227 
f N "abs" 2 522 ""
v L "x" 2 522 "float" `230 
f B "abs" 2 522 "float(float x)" `229 
f N "_mul" 2 523 ""
v L "??65535" 2 523 "int8" `232 
v L "??65535" 2 523 "int8" `233 
f B "_mul" 2 523 "int16(int8 ,int8 )" `231 
f N "_mul" 2 524 ""
v L "??65535" 2 524 "sint8" `235 
v L "??65535" 2 524 "sint8" `236 
f B "_mul" 2 524 "sint16(sint8 ,sint8 )" `234 
f N "_mul" 2 525 ""
v L "??65535" 2 525 "int16" `238 
v L "??65535" 2 525 "int16" `239 
f B "_mul" 2 525 "int32(int16 ,int16 )" `237 
f N "_mul" 2 526 ""
v L "??65535" 2 526 "sint16" `241 
v L "??65535" 2 526 "sint16" `242 
f B "_mul" 2 526 "sint32(sint16 ,sint16 )" `240  "Memory Manipulation Prototypes:"
f N "read_bank" 2 529 ""
v L "bank" 2 529 "int8" `244 
v L "offset" 2 529 "int8" `245 
f B "read_bank" 2 529 "int8(int8 bank,int8 offset)" `243 
f N "write_bank" 2 530 ""
v L "bank" 2 530 "int8" `247 
v L "offset" 2 530 "int8" `248 
v L "value" 2 530 "int8" `249 
f B "write_bank" 2 530 "void(int8 bank,int8 offset,int8 value)" `246 
f N "strcpy" 2 531 ""
v L "dest" 2 531 "*int8" `251 
v L "src" 2 531 "*int8" `252 
f B "strcpy" 2 531 "void(*int8 dest,*int8 src)" `250 
f N "memset" 2 532 ""
v L "destination" 2 532 "*int8" `254 
v L "value" 2 532 "int8" `255 
v L "num" 2 532 "int16" `256 
f B "memset" 2 532 "void(*int8 destination,int8 value,int16 num)" `253 
f N "memcpy" 2 533 ""
v L "destination" 2 533 "*int8" `258 
v L "source" 2 533 "*int8" `259 
v L "num" 2 533 "int16" `260 
f B "memcpy" 2 533 "void(*int8 destination,*int8 source,int16 num)" `257  "String Prototypes:"
f N "toupper" 2 536 ""
v L "cvalue" 2 536 "int8" `262 
f B "toupper" 2 536 "int8(int8 cvalue)" `261 
f N "tolower" 2 537 ""
v L "cvalue" 2 537 "int8" `264 
f B "tolower" 2 537 "int8(int8 cvalue)" `263 
f N "sprintf" 2 538 ""
v L "string" 2 538 "*int8" `266 
v L "cstring" 2 538 "*int8" `267 
f B "sprintf" 2 538 "void(*int8 string,*int8 cstring,*int8 _VA_LIST)" `265  "Data Manipulators Prototypes:"
f N "shift_left" 2 541 ""
v L "address" 2 541 "*int8" `270 
v L "bytes" 2 541 "int8" `271 
v L "value" 2 541 "int8" `272 
f B "shift_left" 2 541 "int8(*int8 address,int8 bytes,int8 value)" `269 
f N "shift_right" 2 542 ""
v L "address" 2 542 "*int8" `274 
v L "bytes" 2 542 "int8" `275 
v L "value" 2 542 "int8" `276 
f B "shift_right" 2 542 "int8(*int8 address,int8 bytes,int8 value)" `273 
f N "rotate_left" 2 543 ""
v L "address" 2 543 "*int8" `278 
v L "bytes" 2 543 "int8" `279 
f B "rotate_left" 2 543 "void(*int8 address,int8 bytes)" `277 
f N "rotate_right" 2 544 ""
v L "address" 2 544 "*int8" `281 
v L "bytes" 2 544 "int8" `282 
f B "rotate_right" 2 544 "void(*int8 address,int8 bytes)" `280 
f N "swap" 2 545 ""
v L "value" 2 545 "int8" `284 
f B "swap" 2 545 "void(int8 value)" `283 
f N "make8" 2 546 ""
v L "var" 2 546 "int16" `286 
v L "offset" 2 546 "int8" `287 
f B "make8" 2 546 "int8(int16 var,int8 offset)" `285 
f N "make8" 2 547 ""
v L "var" 2 547 "int32" `289 
v L "offset" 2 547 "int8" `290 
f B "make8" 2 547 "int8(int32 var,int8 offset)" `288 
f N "make16" 2 548 ""
v L "varhigh" 2 548 "int8" `292 
v L "varlow" 2 548 "int8" `293 
f B "make16" 2 548 "int16(int8 varhigh,int8 varlow)" `291 
f N "make32" 2 549 ""
v L "var1" 2 549 "int16" `295 
f B "make32" 2 549 "int32(int16 var1)" `294 
f N "make32" 2 550 ""
v L "var1" 2 550 "int16" `297 
v L "var2" 2 550 "int16" `298 
f B "make32" 2 550 "int32(int16 var1,int16 var2)" `296 
f N "make32" 2 551 ""
v L "var1" 2 551 "int16" `300 
v L "var2" 2 551 "int8" `301 
f B "make32" 2 551 "int32(int16 var1,int8 var2)" `299 
f N "make32" 2 552 ""
v L "var1" 2 552 "int16" `303 
v L "var2" 2 552 "int8" `304 
v L "var3" 2 552 "int8" `305 
f B "make32" 2 552 "int32(int16 var1,int8 var2,int8 var3)" `302 
f N "make32" 2 553 ""
v L "var1" 2 553 "int8" `307 
f B "make32" 2 553 "int32(int8 var1)" `306 
f N "make32" 2 554 ""
v L "var1" 2 554 "int8" `309 
v L "var2" 2 554 "int8" `310 
f B "make32" 2 554 "int32(int8 var1,int8 var2)" `308 
f N "make32" 2 555 ""
v L "var1" 2 555 "int8" `312 
v L "var2" 2 555 "int8" `313 
v L "var3" 2 555 "int8" `314 
f B "make32" 2 555 "int32(int8 var1,int8 var2,int8 var3)" `311 
f N "make32" 2 556 ""
v L "var1" 2 556 "int8" `316 
v L "var2" 2 556 "int8" `317 
v L "var3" 2 556 "int8" `318 
v L "var4" 2 556 "int8" `319 
f B "make32" 2 556 "int32(int8 var1,int8 var2,int8 var3,int8 var4)" `315 
f N "make32" 2 557 ""
v L "var1" 2 557 "int8" `321 
v L "var2" 2 557 "int16" `322 
f B "make32" 2 557 "int32(int8 var1,int16 var2)" `320 
f N "make32" 2 558 ""
v L "var1" 2 558 "int8" `324 
v L "var2" 2 558 "int16" `325 
v L "var3" 2 558 "int8" `326 
f B "make32" 2 558 "int32(int8 var1,int16 var2,int8 var3)" `323 
f N "make32" 2 559 ""
v L "var1" 2 559 "int8" `328 
v L "var2" 2 559 "int8" `329 
v L "var3" 2 559 "int16" `330 
f B "make32" 2 559 "int32(int8 var1,int8 var2,int16 var3)" `327 
f N "bit_set" 2 560 ""
v L "var" 2 560 "int8" `332 
v L "bit" 2 560 "int8" `333 
f B "bit_set" 2 560 "void(int8 var,int8 bit)" `331 
f N "bit_set" 2 561 ""
v L "var" 2 561 "int16" `335 
v L "bit" 2 561 "int8" `336 
f B "bit_set" 2 561 "void(int16 var,int8 bit)" `334 
f N "bit_set" 2 562 ""
v L "var" 2 562 "int32" `338 
v L "bit" 2 562 "int8" `339 
f B "bit_set" 2 562 "void(int32 var,int8 bit)" `337 
f N "bit_clear" 2 563 ""
v L "var" 2 563 "int8" `341 
v L "bit" 2 563 "int8" `342 
f B "bit_clear" 2 563 "void(int8 var,int8 bit)" `340 
f N "bit_clear" 2 564 ""
v L "var" 2 564 "int16" `344 
v L "bit" 2 564 "int8" `345 
f B "bit_clear" 2 564 "void(int16 var,int8 bit)" `343 
f N "bit_clear" 2 565 ""
v L "var" 2 565 "int32" `347 
v L "bit" 2 565 "int8" `348 
f B "bit_clear" 2 565 "void(int32 var,int8 bit)" `346 
f N "bit_test" 2 566 ""
v L "var" 2 566 "int8" `350 
v L "bit" 2 566 "int8" `351 
f B "bit_test" 2 566 "int8(int8 var,int8 bit)" `349 
f N "bit_test" 2 567 ""
v L "var" 2 567 "int16" `353 
v L "bit" 2 567 "int8" `354 
f B "bit_test" 2 567 "int8(int16 var,int8 bit)" `352 
f N "bit_test" 2 568 ""
v L "var" 2 568 "int32" `356 
v L "bit" 2 568 "int8" `357 
f B "bit_test" 2 568 "int8(int32 var,int8 bit)" `355  "#use delay() Prototypes:"
f N "delay_cycles" 2 571 ""
v L "count" 2 571 "int8" `359 
f B "delay_cycles" 2 571 "void(int8 count)" `358 
f N "delay_ms" 2 572 ""
v L "time" 2 572 "int16" `361 
f B "delay_ms" 2 572 "void(int16 time)" `360 
f N "delay_us" 2 573 ""
v L "time" 2 573 "int16" `363 
f B "delay_us" 2 573 "void(int16 time)" `362  "#use rs232() Prototypes:"
f N "putchar" 2 576 ""
v L "cdata" 2 576 "int8" `365 
f B "putchar" 2 576 "void(int8 cdata)" `364 
f N "putchar" 2 577 ""
v L "cdata" 2 577 "int8" `367 
v L "stream" 2 577 "int8" `368 
f B "putchar" 2 577 "void(int8 cdata,int8 stream)" `366 
f N "puts" 2 578 ""
v L "string" 2 578 "*int8" `370 
f B "puts" 2 578 "void(*int8 string)" `369 
f N "puts" 2 579 ""
v L "string" 2 579 "*int8" `372 
v L "stream" 2 579 "int8" `373 
f B "puts" 2 579 "void(*int8 string,int8 stream)" `371 
f N "getch" 2 580 ""
f B "getch" 2 580 "int8()" `374 
f N "getch" 2 581 ""
v L "stream" 2 581 "int8" `376 
f B "getch" 2 581 "int8(int8 stream)" `375 
f N "gets" 2 582 ""
v L "string" 2 582 "*int8" `378 
f B "gets" 2 582 "void(*int8 string)" `377 
f N "gets" 2 583 ""
v L "string" 2 583 "*int8" `380 
v L "stream" 2 583 "int8" `381 
f B "gets" 2 583 "void(*int8 string,int8 stream)" `379 
f N "kbhit" 2 584 ""
f B "kbhit" 2 584 "int8()" `382 
f N "kbhit" 2 585 ""
v L "stream" 2 585 "int8" `384 
f B "kbhit" 2 585 "int8(int8 stream)" `383 
f N "printf" 2 586 ""
v L "string" 2 586 "*int8" `386 
f B "printf" 2 586 "void(*int8 string,*int8 _VA_LIST)" `385 
f N "fprintf" 2 587 ""
v L "stream" 2 587 "int8" `389 
v L "string" 2 587 "*int8" `390 
f B "fprintf" 2 587 "void(int8 stream,*int8 string,*int8 _VA_LIST)" `388 
f N "putc_send" 2 588 ""
f B "putc_send" 2 588 "void()" `392 
f N "fputc_send" 2 589 ""
v L "stream" 2 589 "int8" `394 
f B "fputc_send" 2 589 "void(int8 stream)" `393 
f N "rcv_buffer_full" 2 590 ""
f B "rcv_buffer_full" 2 590 "int8()" `395 
f N "rcv_buffer_full" 2 591 ""
v L "stream" 2 591 "int8" `397 
f B "rcv_buffer_full" 2 591 "int8(int8 stream)" `396 
f N "rcv_buffer_bytes" 2 592 ""
f B "rcv_buffer_bytes" 2 592 "int16()" `398 
f N "rcv_buffer_bytes" 2 593 ""
v L "stream" 2 593 "int8" `400 
f B "rcv_buffer_bytes" 2 593 "int16(int8 stream)" `399 
f N "tx_buffer_full" 2 594 ""
f B "tx_buffer_full" 2 594 "int8()" `401 
f N "tx_buffer_full" 2 595 ""
v L "stream" 2 595 "int8" `403 
f B "tx_buffer_full" 2 595 "int8(int8 stream)" `402 
f N "tx_buffer_bytes" 2 596 ""
f B "tx_buffer_bytes" 2 596 "int16()" `404 
f N "tx_buffer_bytes" 2 597 ""
v L "stream" 2 597 "int8" `406 
f B "tx_buffer_bytes" 2 597 "int16(int8 stream)" `405  "#use i2c() Prototypes:"
f N "i2c_read" 2 600 ""
f B "i2c_read" 2 600 "int8()" `407 
f N "i2c_read" 2 601 ""
v L "ack" 2 601 "int8" `409 
f B "i2c_read" 2 601 "int8(int8 ack)" `408 
f N "i2c_read" 2 602 ""
v L "stream" 2 602 "int8" `411 
v L "ack" 2 602 "int8" `412 
f B "i2c_read" 2 602 "int8(int8 stream,int8 ack)" `410 
f N "i2c_write" 2 603 ""
v L "data" 2 603 "int8" `414 
f B "i2c_write" 2 603 "int8(int8 data)" `413 
f N "i2c_write" 2 604 ""
v L "stream" 2 604 "int8" `416 
v L "data" 2 604 "int8" `417 
f B "i2c_write" 2 604 "int8(int8 stream,int8 data)" `415 
f N "i2c_start" 2 605 ""
f B "i2c_start" 2 605 "void()" `418 
f N "i2c_start" 2 606 ""
v L "stream" 2 606 "int8" `420 
f B "i2c_start" 2 606 "void(int8 stream)" `419 
f N "i2c_start" 2 607 ""
v L "stream" 2 607 "int8" `422 
v L "restart" 2 607 "int8" `423 
f B "i2c_start" 2 607 "void(int8 stream,int8 restart)" `421 
f N "i2c_stop" 2 608 ""
f B "i2c_stop" 2 608 "void()" `424 
f N "i2c_stop" 2 609 ""
v L "stream" 2 609 "int8" `426 
f B "i2c_stop" 2 609 "void(int8 stream)" `425 
f N "i2c_isr_state" 2 610 ""
f B "i2c_isr_state" 2 610 "int8()" `427 
f N "i2c_slaveaddr" 2 611 ""
v L "addr" 2 611 "int8" `429 
f B "i2c_slaveaddr" 2 611 "void(int8 addr)" `428 
f N "i2c_slaveaddr" 2 612 ""
v L "stream" 2 612 "int8" `431 
v L "addr" 2 612 "int8" `432 
f B "i2c_slaveaddr" 2 612 "void(int8 stream,int8 addr)" `430 
f N "i2c_poll" 2 613 ""
f B "i2c_poll" 2 613 "int8()" `433 
f N "i2c_poll" 2 614 ""
v L "stream" 2 614 "int8" `435 
f B "i2c_poll" 2 614 "int8(int8 stream)" `434 
f N "i2c_init" 2 615 ""
v L "baud" 2 615 "int32" `437 
f B "i2c_init" 2 615 "void(int32 baud)" `436 
f N "i2c_init" 2 616 ""
v L "stream" 2 616 "int8" `439 
v L "baud" 2 616 "int32" `440 
f B "i2c_init" 2 616 "void(int8 stream,int32 baud)" `438  "#use spi() Prototypes:"
f N "spi_xfer" 2 619 ""
f B "spi_xfer" 2 619 "int8()" `441 
f N "spi_xfer" 2 620 ""
f G "spi_xfer" 2 620 "int16(int8 data)" `442 
f N "spi_xfer" 2 621 ""
f G "spi_xfer" 2 621 "int32(int8 data)" `442 
f N "spi_xfer" 2 622 ""
v L "data" 2 622 "int8" `443 
f B "spi_xfer" 2 622 "int8(int8 data)" `442 
f N "spi_xfer" 2 623 ""
v L "data" 2 623 "int16" `445 
f B "spi_xfer" 2 623 "int16(int16 data)" `444 
f N "spi_xfer" 2 624 ""
v L "data" 2 624 "int32" `447 
f B "spi_xfer" 2 624 "int32(int32 data)" `446 
f N "spi_xfer" 2 625 ""
v L "stream" 2 625 "int8" `449 
v L "data" 2 625 "int8" `450 
f B "spi_xfer" 2 625 "int8(int8 stream,int8 data)" `448 
f N "spi_xfer" 2 626 ""
v L "stream" 2 626 "int8" `452 
v L "data" 2 626 "int16" `453 
f B "spi_xfer" 2 626 "int16(int8 stream,int16 data)" `451 
f N "spi_xfer" 2 627 ""
v L "stream" 2 627 "int8" `455 
v L "data" 2 627 "int32" `456 
f B "spi_xfer" 2 627 "int32(int8 stream,int32 data)" `454 
f N "spi_xfer" 2 628 ""
v L "stream" 2 628 "int8" `458 
v L "data" 2 628 "int8" `459 
v L "bits" 2 628 "int8" `460 
f B "spi_xfer" 2 628 "int8(int8 stream,int8 data,int8 bits)" `457 
f N "spi_xfer" 2 629 ""
v L "stream" 2 629 "int8" `462 
v L "data" 2 629 "int16" `463 
v L "bits" 2 629 "int8" `464 
f B "spi_xfer" 2 629 "int16(int8 stream,int16 data,int8 bits)" `461 
f N "spi_xfer" 2 630 ""
v L "stream" 2 630 "int8" `466 
v L "data" 2 630 "int32" `467 
v L "bits" 2 630 "int8" `468 
f B "spi_xfer" 2 630 "int32(int8 stream,int32 data,int8 bits)" `465 
f N "spi_init" 2 631 ""
v L "baud" 2 631 "int32" `470 
f B "spi_init" 2 631 "void(int32 baud)" `469 
f N "spi_init" 2 632 ""
v L "stream" 2 632 "int8" `472 
v L "baud" 2 632 "int32" `473 
f B "spi_init" 2 632 "void(int8 stream,int32 baud)" `471 
f N "spi_speed" 2 633 ""
v L "baud" 2 633 "int32" `475 
f B "spi_speed" 2 633 "void(int32 baud)" `474 
f N "spi_speed" 2 634 ""
v L "stream" 2 634 "int8" `477 
v L "baud" 2 634 "int32" `478 
f B "spi_speed" 2 634 "void(int8 stream,int32 baud)" `476 
f N "spi_speed" 2 635 ""
v L "stream" 2 635 "int8" `480 
v L "baud" 2 635 "int32" `481 
v L "clock" 2 635 "int32" `482 
f B "spi_speed" 2 635 "void(int8 stream,int32 baud,int32 clock)" `479 
f N "spi_prewrite" 2 636 ""
v L "data" 2 636 "int8" `484 
f B "spi_prewrite" 2 636 "void(int8 data)" `483 
f N "spi_prewrite" 2 637 ""
v L "data" 2 637 "int16" `486 
f B "spi_prewrite" 2 637 "void(int16 data)" `485 
f N "spi_prewrite" 2 638 ""
v L "data" 2 638 "int32" `488 
f B "spi_prewrite" 2 638 "void(int32 data)" `487 
f N "spi_prewrite" 2 639 ""
v L "??65535" 2 639 "int8" `490 
v L "data" 2 639 "int8" `491 
f B "spi_prewrite" 2 639 "void(int8 ,int8 data)" `489 
f N "spi_prewrite" 2 640 ""
v L "??65535" 2 640 "int8" `493 
v L "data" 2 640 "int16" `494 
f B "spi_prewrite" 2 640 "void(int8 ,int16 data)" `492 
f N "spi_prewrite" 2 641 ""
v L "??65535" 2 641 "int8" `496 
v L "data" 2 641 "int32" `497 
f B "spi_prewrite" 2 641 "void(int8 ,int32 data)" `495 
f N "spi_xfer_in" 2 642 ""
f B "spi_xfer_in" 2 642 "int8()" `498 
f N "spi_xfer_in" 2 643 ""
f G "spi_xfer_in" 2 643 "int16(int8 bits)" `499 
f N "spi_xfer_in" 2 644 ""
f G "spi_xfer_in" 2 644 "int32(int8 bits)" `499 
f N "spi_xfer_in" 2 645 ""
v L "bits" 2 645 "int8" `500 
f B "spi_xfer_in" 2 645 "int8(int8 bits)" `499 
f N "spi_xfer_in" 2 646 ""
v L "bits" 2 646 "int8" `502 
f G "spi_xfer_in" 2 646 "int16(int8 bits,int8 bits)" `501 
f N "spi_xfer_in" 2 647 ""
v L "bits" 2 647 "int8" `502 
f G "spi_xfer_in" 2 647 "int32(int8 bits,int8 bits)" `501 
f N "spi_xfer_in" 2 648 ""
v L "stream" 2 648 "int8" `502 
v L "bits" 2 648 "int8" `503 
f B "spi_xfer_in" 2 648 "int8(int8 stream,int8 bits)" `501 
f N "spi_xfer_in" 2 649 ""
v L "stream" 2 649 "int8" `502 
v L "bits" 2 649 "int8" `506 
f G "spi_xfer_in" 2 649 "int16(int8 stream,int8 bits,int8 task)" `504 
f N "spi_xfer_in" 2 650 ""
v L "stream" 2 650 "int8" `502 
v L "bits" 2 650 "int8" `506 
f G "spi_xfer_in" 2 650 "int32(int8 stream,int8 bits,int8 task)" `504  "#use rtos() Prototypes:"
f N "rtos_run" 2 653 ""
f B "rtos_run" 2 653 "void(int8 stream,int8 bits,int8 task)" `504 
f N "rtos_yield" 2 654 ""
f B "rtos_yield" 2 654 "void(int8 bits,int8 task)" `505 
f N "rtos_enable" 2 655 ""
v L "task" 2 655 "int8" `507 
f B "rtos_enable" 2 655 "void(int8 task)" `506 
f N "rtos_disable" 2 656 ""
v L "task" 2 656 "int8" `509 
f B "rtos_disable" 2 656 "void(int8 task)" `508 
f N "rtos_terminate" 2 657 ""
f B "rtos_terminate" 2 657 "void()" `510 
f N "rtos_await" 2 658 ""
v L "flag" 2 658 "int8" `512 
f B "rtos_await" 2 658 "void(int8 flag)" `511 
f N "rtos_wait" 2 659 ""
v L "sem" 2 659 "int8" `514 
f B "rtos_wait" 2 659 "void(int8 sem)" `513 
f N "rtos_signal" 2 660 ""
v L "sem" 2 660 "int8" `516 
f B "rtos_signal" 2 660 "void(int8 sem)" `515 
f N "rtos_msg_send" 2 661 ""
v L "task" 2 661 "int8" `518 
v L "msg" 2 661 "int8" `519 
f B "rtos_msg_send" 2 661 "void(int8 task,int8 msg)" `517 
f N "rtos_msg_read" 2 662 ""
f B "rtos_msg_read" 2 662 "int8()" `520 
f N "rtos_msg_poll" 2 663 ""
f B "rtos_msg_poll" 2 663 "int8()" `521 
f N "rtos_overrun" 2 664 ""
v L "task" 2 664 "int8" `523 
f B "rtos_overrun" 2 664 "int8(int8 task)" `522 
f N "rtos_stats" 2 665 ""
v L "task" 2 665 "int8" `525 
v L "stat" 2 665 "*int8" `526 
f B "rtos_stats" 2 665 "void(int8 task,*int8 stat)" `524  "#use timer() Prototypes:"
f N "get_ticks" 2 668 ""
f B "get_ticks" 2 668 "int8()" `527 
f N "get_ticks" 2 669 ""
f G "get_ticks" 2 669 "int16(int8 stream)" `528 
f N "get_ticks" 2 670 ""
f G "get_ticks" 2 670 "int32(int8 stream)" `528 
f N "get_ticks" 2 671 ""
v L "stream" 2 671 "int8" `529 
f B "get_ticks" 2 671 "int8(int8 stream)" `528 
f N "get_ticks" 2 672 ""
v L "stream" 2 672 "int8" `531 
f G "get_ticks" 2 672 "int16(int8 stream)" `530 
f N "get_ticks" 2 673 ""
v L "stream" 2 673 "int8" `531 
f G "get_ticks" 2 673 "int32(int8 stream)" `530 
f N "set_ticks" 2 674 ""
v L "value" 2 674 "int8" `531 
f B "set_ticks" 2 674 "void(int8 value)" `530 
f N "set_ticks" 2 675 ""
v L "value" 2 675 "int16" `533 
f B "set_ticks" 2 675 "void(int16 value)" `532 
f N "set_ticks" 2 676 ""
v L "value" 2 676 "int32" `535 
f B "set_ticks" 2 676 "void(int32 value)" `534 
f N "set_ticks" 2 677 ""
v L "stream" 2 677 "int8" `537 
v L "value" 2 677 "int8" `538 
f B "set_ticks" 2 677 "void(int8 stream,int8 value)" `536 
f N "set_ticks" 2 678 ""
v L "stream" 2 678 "int8" `540 
v L "value" 2 678 "int16" `541 
f B "set_ticks" 2 678 "void(int8 stream,int16 value)" `539 
f N "set_ticks" 2 679 ""
v L "stream" 2 679 "int8" `543 
v L "value" 2 679 "int32" `544 
f B "set_ticks" 2 679 "void(int8 stream,int32 value)" `542  "#use pwm() Prototypes:"
f N "pwm_on" 2 682 ""
f B "pwm_on" 2 682 "void()" `545 
f N "pwm_on" 2 683 ""
v L "stream" 2 683 "int8" `547 
f B "pwm_on" 2 683 "void(int8 stream)" `546 
f N "pwm_off" 2 684 ""
f B "pwm_off" 2 684 "void()" `548 
f N "pwm_off" 2 685 ""
v L "stream" 2 685 "int8" `550 
f B "pwm_off" 2 685 "void(int8 stream)" `549 
f N "pwm_set_duty" 2 686 ""
v L "duty" 2 686 "int16" `552 
f B "pwm_set_duty" 2 686 "void(int16 duty)" `551 
f N "pwm_set_duty" 2 687 ""
v L "stream" 2 687 "int8" `554 
v L "duty" 2 687 "int16" `555 
f B "pwm_set_duty" 2 687 "void(int8 stream,int16 duty)" `553 
f N "pwm_set_duty_percent" 2 688 ""
v L "percent" 2 688 "int16" `557 
f B "pwm_set_duty_percent" 2 688 "void(int16 percent)" `556 
f N "pwm_set_duty_percent" 2 689 ""
v L "stream" 2 689 "int8" `559 
v L "percent" 2 689 "int16" `560 
f B "pwm_set_duty_percent" 2 689 "void(int8 stream,int16 percent)" `558 
f N "pwm_set_frequency" 2 690 ""
v L "frequency" 2 690 "int32" `562 
f B "pwm_set_frequency" 2 690 "void(int32 frequency)" `561 
f N "pwm_set_frequency" 2 691 ""
v L "stream" 2 691 "int8" `564 
v L "frequency" 2 691 "int32" `565 
f B "pwm_set_frequency" 2 691 "void(int8 stream,int32 frequency)" `563  "#use capture() Prototypes:"
f N "get_capture_time" 2 694 ""
f B "get_capture_time" 2 694 "int16()" `566 
f N "get_capture_time" 2 695 ""
v L "stream" 2 695 "int8" `568 
f B "get_capture_time" 2 695 "int16(int8 stream)" `567 
f N "get_capture_event" 2 696 ""
f B "get_capture_event" 2 696 "int8()" `569 
f N "get_capture_event" 2 697 ""
v L "stream" 2 697 "int8" `571 
f B "get_capture_event" 2 697 "int8(int8 stream)" `570  "Enviroment Prototypes:"
c L "get_capture_event" 2 3 2 "FUNCTION"
f N "goto_address" 2 710 ""
v L "address" 2 710 "int16" `573 
f B "goto_address" 2 710 "void(int16 address)" `572 
f N "label_address" 2 711 ""
v L "label" 2 711 "int16" `575 
f B "label_address" 2 711 "int16(int16 label)" `574  "Program Memory Prototypes:"
f N "read_program_memory" 2 714 ""
v L "address" 2 714 "int16" `577 
v L "dataptr" 2 714 "*int8" `578 
v L "count" 2 714 "int16" `579 
f B "read_program_memory" 2 714 "void(int16 address,*int8 dataptr,int16 count)" `576 
f N "read_program_eeprom" 2 715 ""
v L "address" 2 715 "int16" `581 
f B "read_program_eeprom" 2 715 "int16(int16 address)" `580 
f N "erase_program_eeprom" 2 716 ""
v L "address" 2 716 "int16" `583 
f B "erase_program_eeprom" 2 716 "void(int16 address)" `582 
f N "write_program_memory" 2 717 ""
v L "address" 2 717 "int16" `585 
v L "dataptr" 2 717 "*int8" `586 
v L "count" 2 717 "int16" `587 
f B "write_program_memory" 2 717 "void(int16 address,*int8 dataptr,int16 count)" `584 
f N "write_program_eeprom" 2 718 ""
v L "address" 2 718 "int16" `589 
v L "data" 2 718 "int16" `590 
f B "write_program_eeprom" 2 718 "void(int16 address,int16 data)" `588  "EEPROM Prototypes:"
d G "__EEADDRESS__" 2 723 "unsigned int16"
f N "read_eeprom" 2 728 ""
v L "address" 2 728 "int16" `592 
f B "read_eeprom" 2 728 "int8(int16 address)" `591 
f N "write_eeprom" 2 729 ""
v L "address" 2 729 "int16" `594 
v L "value" 2 729 "int8" `595 
f B "write_eeprom" 2 729 "void(int16 address,int8 value)" `593  "INT"
c L "write_eeprom" 2 3 4 "FUNCTION"
f N "enable_interrupts" 2 736 ""
v L "interrupt" 2 736 "int32" `597 
f B "enable_interrupts" 2 736 "void(int32 interrupt)" `596 
f N "disable_interrupts" 2 737 ""
v L "interrupt" 2 737 "int32" `599 
f B "disable_interrupts" 2 737 "void(int32 interrupt)" `598 
f N "clear_interrupt" 2 738 ""
v L "interrupt" 2 738 "int32" `601 
f B "clear_interrupt" 2 738 "void(int32 interrupt)" `600 
f N "interrupt_active" 2 739 ""
v L "interrupt" 2 739 "int32" `603 
f B "interrupt_active" 2 739 "int8(int32 interrupt)" `602 
f N "interrupt_enabled" 2 740 ""
v L "interrupt" 2 740 "int32" `605 
f B "interrupt_enabled" 2 740 "int8(int32 interrupt)" `604 
f N "ext_int_edge" 2 741 ""
v L "source" 2 741 "int8" `607 
v L "edge" 2 741 "int8" `608 
f B "ext_int_edge" 2 741 "void(int8 source,int8 edge)" `606 
f N "jump_to_isr" 2 742 ""
v L "address" 2 742 "int16" `610 
f B "jump_to_isr" 2 742 "void(int16 address)" `609  "Constants used in EXT_INT_EDGE() are:"
d G "L_TO_H" 2 744 "0x40"
d G "H_TO_L" 2 745 "0"
d G "GLOBAL" 2 747 "0xF2C0"
d G "PERIPH" 2 748 "0xF240"
d G "INT_RTCC" 2 749 "0x00F220"
d G "INT_TIMER0" 2 750 "0x00F220"
d G "INT_TIMER1" 2 751 "0x009D01"
d G "INT_TIMER2" 2 752 "0x009D02"
d G "INT_TIMER3" 2 753 "0x00A002"
d G "INT_EXT_L2H" 2 754 "0x5000F210"
d G "INT_EXT_H2L" 2 755 "0x6000F210"
d G "INT_EXT" 2 756 "0x00F210"
d G "INT_EXT1_L2H" 2 757 "0x5001F008"
d G "INT_EXT1_H2L" 2 758 "0x6001F008"
d G "INT_EXT1" 2 759 "0x00F008"
d G "INT_EXT2_L2H" 2 760 "0x5002F010"
d G "INT_EXT2_H2L" 2 761 "0x6002F010"
d G "INT_EXT2" 2 762 "0x00F010"
d G "INT_RB" 2 763 "0x00FFF208"
d G "INT_PSP" 2 764 "0x009D80"
d G "INT_AD" 2 765 "0x009D40"
d G "INT_RDA" 2 766 "0x009D20"
d G "INT_TBE" 2 767 "0x009D10"
d G "INT_SSP" 2 768 "0x009D08"
d G "INT_CCP1" 2 769 "0x009D04"
d G "INT_CCP2" 2 770 "0x00A001"
d G "INT_BUSCOL" 2 771 "0x00A008"
d G "INT_LOWVOLT" 2 772 "0x00A004"
d G "INT_CANIRX" 2 773 "0x00A380"
d G "INT_CANWAKE" 2 774 "0x00A340"
d G "INT_CANERR" 2 775 "0x00A320"
d G "INT_COMP" 2 776 "0x00A040"
d G "INT_EEPROM" 2 777 "0x00A010"
d G "INT_CANTX2" 2 778 "0x00A310"
d G "INT_CANTX1" 2 779 "0x00A308"
d G "INT_CANTX0" 2 780 "0x00A304"
d G "INT_CANRX1" 2 781 "0x00A302"
d G "INT_CANRX0" 2 782 "0x00A301"
D G "MATH_H" 3 30 ""
D G "PI" 3 35 "3.1415926535897932"
D G "SQRT2" 3 38 "1.4142135623730950"
C L "jump_to_isr" 3 2 3 "FUNCTION"
F N "CEIL_FLOOR" 3 45 ""
V L "x" 3 45 "float" `618 
V L "n" 3 45 "int8" `619 
F G "CEIL_FLOOR" 3 46 "float(float x,int8 n)" `617 
V L "y" 3 47 "float" `620 
V L "res" 3 47 "float" `621 
V L "l" 3 48 "int16" `622 
V L "s" 3 49 "int1" `623 
C L "floor" 3 2 5 "FUNCTION"
F N "floor" 3 207 ""
V L "x" 3 207 "float" `638 
F G "floor" 3 208 "float(float x)" `637 
C L "ceil" 3 2 5 "FUNCTION"
F N "ceil" 3 233 ""
V L "x" 3 233 "float" `640 
F G "ceil" 3 234 "float(float x)" `639 
D G "fabs" 3 259 "abs"
C L "fmod" 3 2 6 "FUNCTION"
F N "fmod" 3 271 ""
V L "x" 3 271 "float" `642 
V L "y" 3 271 "float" `643 
F G "fmod" 3 272 "float(float x,float y)" `641 
V L "i" 3 273 "float" `644 
D G "LN2" 3 334 "0.6931471805599453"
D G "LN2_INV" 3 335 "1.4426950408889634073"
V G "pe" 3 337 "[6]" `649 
F N "exp" 3 341 ""
V L "x" 3 341 "float" `652 
F G "exp" 3 342 "float(float x)" `651 
V L "y" 3 343 "float" `653 
V L "res" 3 343 "float" `654 
V L "r" 3 343 "float" `655 
V L "n" 3 347 "sint8" `656 
V L "s" 3 348 "int1" `657 
C L "exp" 3 2 1 "FUNCTION"
V G "pl" 3 525 "[4]" `661 
V G "ql" 3 526 "[4]" `664 
C L "log" 3 2 3 "FUNCTION"
F N "log" 3 534 ""
V L "x" 3 534 "float" `667 
F G "log" 3 535 "float(float x)" `666 
V L "y" 3 536 "float" `668 
V L "res" 3 536 "float" `669 
V L "r" 3 536 "float" `670 
V L "y2" 3 536 "float" `671 
V L "n" 3 540 "sint8" `672 
C L "log" 3 2 1 "FUNCTION"
D G "LN10" 3 758 "2.3025850929940456"
D G "LN10_INV" 3 759 "0.4342944819032518276"
C L "log10" 3 2 3 "FUNCTION"
F N "log10" 3 767 ""
V L "x" 3 767 "float" `674 
F G "log10" 3 768 "float(float x)" `673 
V L "r" 3 769 "float" `675 
C L "modf" 3 2 8 "FUNCTION"
F N "modf" 3 808 ""
V L "value" 3 808 "float" `677 
V L "iptr" 3 808 "*float" `678 
F G "modf" 3 809 "float(float value,*float iptr)" `676 
C L "pwr" 3 2 6 "FUNCTION"
F N "pwr" 3 836 ""
V L "x" 3 836 "float" `680 
V L "y" 3 836 "float" `681 
F G "pwr" 3 837 "float(float x,float y)" `679 
C L "pow" 3 2 7 "FUNCTION"
F N "pow" 3 899 ""
V L "x" 3 899 "float" `683 
V L "y" 3 899 "float" `684 
F G "pow" 3 900 "float(float x,float y)" `682 
C L "sqrt" 3 2 5 "FUNCTION"
F N "sqrt" 3 960 ""
V L "x" 3 960 "float" `686 
F G "sqrt" 3 961 "float(float x)" `685 
V L "y" 3 962 "float" `687 
V L "res" 3 962 "float" `688 
V L "p" 3 966 "*int8" `689 
D G "PI_DIV_BY_TWO_INV" 3 1155 "0.63661977236758134"
D G "PI_DIV_BY_TWO" 3 1159 "1.5707963267948966"
D G "TWOBYPI" 3 1163 "0.6366197723675813"
C L "cos" 3 2 3 "FUNCTION"
F N "cos" 3 1171 ""
V L "x" 3 1171 "float" `691 
F G "cos" 3 1172 "float(float x)" `690 
V L "y" 3 1173 "float" `692 
V L "t" 3 1173 "float" `693 
V L "t2" 3 1173 "float" `694 
V L "quad" 3 1174 "int8" `695 
V L "i" 3 1174 "int8" `696 
V L "frac" 3 1175 "float" `697 
V L "p" 3 1176 "float[5]" `698  "by the series definition for cosine"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 2 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "cos" 3 2 1 "FUNCTION"
C L "sin" 3 2 5 "FUNCTION"
F N "sin" 3 1310 ""
V L "x" 3 1310 "float" `700 
F G "sin" 3 1311 "float(float x)" `699 
C L "tan" 3 2 5 "FUNCTION"
F N "tan" 3 1336 ""
V L "x" 3 1336 "float" `702 
F G "tan" 3 1337 "float(float x)" `701 
V L "c" 3 1338 "float" `703 
V L "s" 3 1338 "float" `704 
V G "pas" 3 1376 "[3]" `706 
V G "qas" 3 1377 "[3]" `709 
F N "ASIN_COS" 3 1379 ""
V L "x" 3 1379 "float" `712 
V L "n" 3 1379 "int8" `713 
F G "ASIN_COS" 3 1380 "float(float x,int8 n)" `711 
V L "y" 3 1381 "float" `714 
V L "res" 3 1381 "float" `715 
V L "r" 3 1381 "float" `716 
V L "y2" 3 1381 "float" `717 
V L "s" 3 1382 "int1" `718 
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "ASIN_COS" 3 2 1 "FUNCTION"
C L "asin" 3 2 5 "FUNCTION"
F N "asin" 3 1537 ""
V L "x" 3 1537 "float" `720 
F G "asin" 3 1538 "float(float x)" `719 
V L "r" 3 1539 "float" `721 
C L "acos" 3 2 5 "FUNCTION"
F N "acos" 3 1571 ""
V L "x" 3 1571 "float" `723 
F G "acos" 3 1572 "float(float x)" `722 
V L "r" 3 1573 "float" `724 
V G "pat" 3 1599 "[4]" `726 
V G "qat" 3 1600 "[4]" `729 
C L "atan" 3 2 3 "FUNCTION"
F N "atan" 3 1608 ""
V L "x" 3 1608 "float" `732 
F G "atan" 3 1609 "float(float x)" `731 
V L "y" 3 1610 "float" `733 
V L "res" 3 1610 "float" `734 
V L "r" 3 1610 "float" `735 
V L "s" 3 1611 "int1" `736 
V L "flag" 3 1611 "int1" `737 
C L "atan" 3 2 1 "FUNCTION"
C L "atan2" 3 2 7 "FUNCTION"
F N "atan2" 3 1751 ""
V L "y" 3 1751 "float" `739 
V L "x" 3 1751 "float" `740 
F G "atan2" 3 1752 "float(float y,float x)" `738 
V L "z" 3 1753 "float" `741 
V L "sign" 3 1754 "int1" `742 
V L "quad" 3 1755 "int8" `743 
C L "atan2" 3 2 1 "FUNCTION"
C L "atan2" 3 2 1 "FUNCTION"
C L "cosh" 3 2 7 "FUNCTION"
F N "cosh" 3 1973 ""
V L "x" 3 1973 "float" `746 
F G "cosh" 3 1974 "float(float x)" `745 
C L "sinh" 3 2 6 "FUNCTION"
F N "sinh" 3 2000 ""
V L "x" 3 2000 "float" `748 
F G "sinh" 3 2001 "float(float x)" `747 
C L "tanh" 3 2 6 "FUNCTION"
F N "tanh" 3 2030 ""
V L "x" 3 2030 "float" `750 
F G "tanh" 3 2031 "float(float x)" `749 
D G "LOG2" 3 2060 ".30102999566398119521"
D G "LOG2_INV" 3 2061 "3.32192809488736234787"
F N "frexp" 3 2062 ""
V L "x" 3 2062 "float" `752 
V L "exp" 3 2062 "*sint8" `753 
F G "frexp" 3 2063 "float(float x,*sint8 exp)" `751 
V L "res" 3 2064 "float" `754 
V L "sign" 3 2065 "int1" `755 
C L "ldexp" 3 2 6 "FUNCTION"
F N "ldexp" 3 2207 ""
V L "value" 3 2207 "float" `757 
V L "exp" 3 2207 "sint8" `758 
F G "ldexp" 3 2208 "float(float value,sint8 exp)" `756 
D G "_STRING" 4 12 ""
D G "_STDDEF" 5 13 ""
D G "ptrdiff_t" 5 18 "unsigned int16"
D G "size_t" 5 24 "unsigned int16"
D G "wchar_t" 5 26 "char"
D G "NULL" 5 27 "0"
D G "offsetof" 5 29 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 6 12 ""
D G "islower" 6 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 6 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 6 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 6 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 6 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 6 19 "(x)  ((x)==' ')"
D G "isxdigit" 6 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 6 21 "(x)  ((x)<' ')"
D G "isprint" 6 22 "(x)  ((x)>=' ')"
D G "isgraph" 6 23 "(x)  ((x)>' ')"
D G "ispunct" 6 24 "(x)  (((x)>' ')&&!isalnum(x))"
F N "memmove" 4 34 ""
V L "s1" 4 34 "*void" `760 
V L "s2" 4 34 "*void" `761 
V L "n" 4 34 "int16" `762 
F G "memmove" 4 35 "*int8(*void s1,*void s2,int16 n)" `759 
V L "sc1" 4 36 "*int8" `763 
V L "sc2" 4 37 "*int8" `764 
D G "strcopy" 4 54 "strcpy"
F N "strncpy" 4 61 ""
V L "s1" 4 61 "*int8" `766 
V L "s2" 4 61 "*int8" `767 
V L "n" 4 61 "int16" `768 
F G "strncpy" 4 62 "*int8(*int8 s1,*int8 s2,int16 n)" `765 
V L "s" 4 63 "*int8" `769 
F N "strcat" 4 78 ""
V L "s1" 4 78 "*int8" `771 
V L "s2" 4 78 "*int8" `772 
F G "strcat" 4 79 "*int8(*int8 s1,*int8 s2)" `770 
V L "s" 4 80 "*int8" `773 
F N "strncat" 4 96 ""
V L "s1" 4 96 "*int8" `775 
V L "s2" 4 96 "*int8" `776 
V L "n" 4 96 "int16" `777 
F G "strncat" 4 97 "*int8(*int8 s1,*int8 s2,int16 n)" `774 
V L "s" 4 98 "*int8" `778 
C L "memcmp" 4 19 3 "FUNCTION"
F N "memcmp" 4 120 ""
V L "s1" 4 120 "*void" `780 
V L "s2" 4 120 "*void" `781 
V L "n" 4 120 "int16" `782 
F G "memcmp" 4 121 "sint8(*void s1,*void s2,int16 n)" `779 
V L "su1" 4 122 "*int8" `783 
V L "su2" 4 122 "*int8" `784 
C L "strcmp" 4 19 2 "FUNCTION"
F N "strcmp" 4 134 ""
V L "s1" 4 134 "*int8" `786 
V L "s2" 4 134 "*int8" `787 
F G "strcmp" 4 135 "sint8(*int8 s1,*int8 s2)" `785 
C L "strcoll" 4 19 2 "FUNCTION"
F N "strcoll" 4 144 ""
V L "s1" 4 144 "*int8" `789 
V L "s2" 4 144 "*int8" `790 
F G "strcoll" 4 145 "sint8(*int8 s1,*int8 s2)" `788 
C L "strncmp" 4 19 4 "FUNCTION"
F N "strncmp" 4 157 ""
V L "s1" 4 157 "*int8" `792 
V L "s2" 4 157 "*int8" `793 
V L "n" 4 157 "int16" `794 
F G "strncmp" 4 158 "sint8(*int8 s1,*int8 s2,int16 n)" `791 
C L "strxfrm" 4 19 4 "FUNCTION"
F N "strxfrm" 4 170 ""
V L "s1" 4 170 "*int8" `796 
V L "s2" 4 170 "*int8" `797 
V L "n" 4 170 "int16" `798 
F G "strxfrm" 4 171 "int16(*int8 s1,*int8 s2,int16 n)" `795 
V L "c" 4 172 "int8" `799 
V L "n1" 4 173 "int8" `800 
C L "strxfrm" 4 19 1 "FUNCTION"
F N "memchr" 4 201 ""
V L "s" 4 201 "*void" `802 
V L "c" 4 201 "int8" `803 
V L "n" 4 201 "int16" `804 
F G "memchr" 4 202 "*int8(*void s,int8 c,int16 n)" `801 
V L "uc" 4 203 "int8" `805 
V L "su" 4 204 "*int8" `806 
F N "strchr" 4 215 ""
V L "s" 4 215 "*int8" `808 
V L "c" 4 215 "int8" `809 
F G "strchr" 4 216 "*int8(*int8 s,int8 c)" `807 
C L "strcspn" 4 19 4 "FUNCTION"
F N "strcspn" 4 227 ""
V L "s1" 4 227 "*int8" `811 
V L "s2" 4 227 "*int8" `812 
F G "strcspn" 4 228 "int8(*int8 s1,*int8 s2)" `810 
V L "sc1" 4 229 "*int8" `813 
V L "sc2" 4 229 "*int8" `814 
F N "strpbrk" 4 242 ""
V L "s1" 4 242 "*int8" `816 
V L "s2" 4 242 "*int8" `817 
F G "strpbrk" 4 243 "*int8(*int8 s1,*int8 s2)" `815 
V L "sc1" 4 244 "*int8" `818 
V L "sc2" 4 244 "*int8" `819 
F N "strrchr" 4 257 ""
V L "s" 4 257 "*int8" `821 
V L "c" 4 257 "int8" `822 
F G "strrchr" 4 258 "*int8(*int8 s,int8 c)" `820 
V L "p" 4 259 "*int8" `823 
C L "strspn" 4 19 2 "FUNCTION"
F N "strspn" 4 272 ""
V L "s1" 4 272 "*int8" `825 
V L "s2" 4 272 "*int8" `826 
F G "strspn" 4 273 "int8(*int8 s1,*int8 s2)" `824 
V L "sc1" 4 274 "*int8" `827 
V L "sc2" 4 274 "*int8" `828 
F N "strstr" 4 291 ""
V L "s1" 4 291 "*int8" `830 
V L "s2" 4 291 "*int8" `831 
F G "strstr" 4 292 "*int8(*int8 s1,*int8 s2)" `829 
V L "s" 4 293 "*int8" `832 
V L "t" 4 293 "*int8" `833 
C L "strlen" 4 19 2 "FUNCTION"
F N "strlen" 4 318 ""
V L "s" 4 318 "*int8" `835 
F G "strlen" 4 319 "int16(*int8 s)" `834 
V L "sc" 4 320 "*int8" `836 
F N "strtok" 4 341 ""
V L "s1" 4 341 "*int8" `838 
V L "s2" 4 341 "*int8" `839 
F G "strtok" 4 342 "*int8(*int8 s1,*int8 s2)" `837 
V L "beg" 4 343 "*int8" `840 
V L "end" 4 343 "*int8" `841 
V L "save" 4 344 "*int8" `842 
C L "stricmp" 4 19 6 "FUNCTION"
F N "stricmp" 4 392 ""
V L "s1" 4 392 "*int8" `844 
V L "s2" 4 392 "*int8" `845 
F G "stricmp" 4 393 "sint8(*int8 s1,*int8 s2)" `843 
F N "strlwr" 4 406 ""
V L "s" 4 406 "*int8" `849 
F G "strlwr" 4 407 "*int8(*int8 s)" `848 
V L "p" 4 408 "*int8" `850 
F N "strupr" 4 420 ""
V L "s" 4 420 "*int8" `852 
F G "strupr" 4 421 "*int8(*int8 s)" `851 
V L "p" 4 422 "*int8" `853 
D G "_STDLIB" 7 13 ""
D G "RAND_MAX" 7 20 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 7 26 "1"
T G "div_t" 7 34 "{sint8 quot,sint8 rem}" `857 
T G "ldiv_t" 7 39 "{sint16 quot,sint16 rem}" `861  "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atoi" 5 3 6 "FUNCTION"
C L "atoi" 7 44 2 "FUNCTION"
C L "atoi" 7 47 1 "*"
C L "atoi" 7 47 1 "*"
F N "atoi" 7 51 ""
V L "s" 7 51 "*int8" `863 
f G "atoi" 7 51 "sint8(*int8 s)" `862  "Syntax: signed int32  atoi32(char * s)"
F N "atoi32" 7 59 ""
V L "s" 7 59 "*int8" `865 
f G "atoi32" 7 59 "sint32(*int8 s)" `864  "Syntax: char *  itoa(signed int32 num, int8 base, char * s)"
C L "atoi32" 7 47 2 "FUNCTION"
F N "itoa" 7 80 ""
V L "num" 7 80 "sint32" `867 
V L "base" 7 80 "int8" `868 
V L "s" 7 80 "*int8" `869 
f G "itoa" 7 80 "*int8(sint32 num,int8 base,*int8 s)" `866  "Standard template: signed int16  atol(char * s)"
C L "itoa" 7 82 1 "*"
C L "itoa" 7 82 1 "*"
F N "atol" 7 86 ""
V L "s" 7 86 "*int8" `871 
f G "atol" 7 86 "sint16(*int8 s)" `870  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "atol" 7 88 1 "*"
C L "atol" 7 88 1 "*"
C L "atol" 7 88 1 "*"
C L "atol" 7 88 1 "*"
F N "strtol" 7 94 ""
V L "s" 7 94 "*int8" `873 
V L "endptr" 7 94 "*int8" `874 
V L "base" 7 94 "sint8" `875 
f G "strtol" 7 94 "sint16(*int8 s,*int8 endptr,sint8 base)" `872  "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 7 96 1 "*"
C L "strtol" 7 96 1 "*"
C L "strtol" 7 96 1 "*"
C L "strtol" 7 96 1 "*"
F N "strtoul" 7 102 ""
V L "s" 7 102 "*int8" `877 
V L "endptr" 7 102 "*int8" `878 
V L "base" 7 102 "sint8" `879 
f G "strtoul" 7 102 "int16(*int8 s,*int8 endptr,sint8 base)" `876  "Standart template: float strtof(char * s,char *endptr)"
C L "strtoul" 7 96 2 "FUNCTION"
C L "strtoul" 7 104 1 "*"
C L "strtoul" 7 104 1 "*"
C L "strtoul" 7 104 1 "*"
F N "strtof" 7 111 ""
V L "s" 7 111 "*int8" `881 
V L "endptr" 7 111 "??0 *" `882 
f G "strtof" 7 111 "float(*int8 s,??0 * endptr)" `880  "provided for compatibility"
D G "strtof48" 7 117 "(s,e) strtof(s, e)"
D G "strtod" 7 118 "(s,e) strtof(s, e)"
C L "strtof" 7 104 1 "FUNCTION"
C L "strtof" 7 121 1 "*"
D G "atof" 7 125 "(s)   strtof(s, (char*)0)"
C L "strtof" 7 121 1 "FUNCTION"
C L "strtof" 7 144 1 "*"
C L "strtof" 7 144 1 "*"
C L "strtof" 7 144 1 "*"
F N "atoe" 7 150 ""
V L "s" 7 150 "*int8" `885 
f G "atoe" 7 150 "float(*int8 s)" `884  "Pseudo-random sequence generation functions"
C L "atoe" 7 144 1 "FUNCTION"
C L "atoe" 7 161 1 "*"
C L "atoe" 7 161 1 "*"
C L "atoe" 7 161 1 "*"
C L "atoe" 7 161 1 "*"
C L "atoe" 7 161 1 "*"
F N "rand" 7 170 ""
f G "rand" 7 170 "int16()" `886  "The srand function uses the argument as a seed for a new sequence of"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
C L "rand" 7 172 1 "*"
F N "srand" 7 192 ""
V L "seed" 7 192 "int32" `888 
f G "srand" 7 192 "void(int32 seed)" `887  "Memory management functions"
C L "srand" 7 172 3 "FUNCTION"
F N "system" 7 206 ""
V L "string" 7 206 "*int8" `890 
f G "system" 7 206 "sint8(*int8 string)" `889  "Searching and sorting utilities"
C L "system" 7 172 1 "FUNCTION"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 1 "*"
C L "system" 7 212 4 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
C L "system" 7 230 1 "*"
D G "labs" 7 250 "abs"
F N "div" 7 252 ""
V L "numer" 7 252 "sint8" `892 
V L "denom" 7 252 "sint8" `893 
f G "div" 7 252 "div_t(sint8 numer,sint8 denom)" `891 
F N "ldiv" 7 253 ""
V L "numer" 7 253 "sint16" `895 
V L "denom" 7 253 "sint16" `896 
f G "ldiv" 7 253 "ldiv_t(sint16 numer,sint16 denom)" `894  "Multibyte character functions"
C L "ldiv" 7 230 4 "FUNCTION"
C L "ldiv" 5 2 7 "FUNCTION"
C L "ldiv" 4 2 7 "FUNCTION"
F N "div" 7 275 ""
V L "numer" 7 275 "sint8" `892 
V L "denom" 7 275 "sint8" `899 
F G "div" 7 276 "div_t(sint8 numer,sint8 denom)" `891 
V L "val" 7 277 "div_t" `897 
F N "ldiv" 7 283 ""
V L "numer" 7 283 "sint16" `895 
V L "denom" 7 283 "sint16" `906 
F G "ldiv" 7 284 "ldiv_t(sint16 numer,sint16 denom)" `894 
V L "val" 7 285 "ldiv_t" `904 
F N "atoe" 7 362 ""
V L "s" 7 362 "*int8" `912 
F G "atoe" 7 363 "float(*int8 s)" `884 
V L "pow10" 7 364 "float" `911 
V L "result" 7 365 "float" `912 
V L "sign" 7 366 "int8" `913 
V L "expsign" 7 367 "int8" `914 
V L "c" 7 368 "int8" `915 
V L "ptr" 7 369 "int8" `916 
V L "i" 7 370 "int8" `917 
V L "exp" 7 371 "float" `918 
V L "expcnt" 7 372 "int8" `919 
C L "atoe" 7 398 1 "FUNCTION"
F N "atoi" 7 430 ""
V L "s" 7 430 "*int8" `921 
F G "atoi" 7 431 "sint8(*int8 s)" `862 
V L "result" 7 432 "sint8" `920 
V L "sign" 7 433 "int8" `921 
V L "base" 7 433 "int8" `922 
V L "index" 7 433 "int8" `923 
V L "c" 7 434 "int8" `924 
C L "atoi" 7 398 1 "FUNCTION"
C L "atoi" 7 398 1 "FUNCTION"
C L "atoi" 7 398 1 "FUNCTION"
C L "atoi" 7 398 1 "FUNCTION"
C L "atoi" 7 398 1 "FUNCTION"
C L "atoi" 7 398 1 "FUNCTION"
F N "atol" 7 499 ""
V L "s" 7 499 "*int8" `926 
F G "atol" 7 500 "sint16(*int8 s)" `870 
V L "result" 7 501 "sint16" `925 
V L "sign" 7 502 "int8" `926 
V L "base" 7 502 "int8" `927 
V L "index" 7 502 "int8" `928 
V L "c" 7 503 "int8" `929 
C L "atol" 7 398 1 "FUNCTION"
C L "atol" 7 398 1 "FUNCTION"
C L "atol" 7 398 1 "FUNCTION"
C L "atol" 7 398 1 "FUNCTION"
C L "mult_with10" 7 398 1 "FUNCTION"
F N "mult_with10" 7 566 ""
V L "num" 7 566 "int32" `931 
F G "mult_with10" 7 567 "sint32(int32 num)" `930 
F N "atoi32" 7 572 ""
V L "s" 7 572 "*int8" `933 
F G "atoi32" 7 573 "sint32(*int8 s)" `864 
V L "result" 7 574 "sint32" `932 
V L "sign" 7 575 "int8" `933 
V L "base" 7 575 "int8" `934 
V L "index" 7 575 "int8" `935 
V L "c" 7 576 "int8" `936 
C L "atoi32" 7 398 1 "FUNCTION"
C L "atoi32" 7 398 1 "FUNCTION"
C L "atoi32" 7 398 1 "FUNCTION"
C L "atoi32" 7 398 1 "FUNCTION"
C L "atoi32" 7 398 1 "FUNCTION"
F N "itoa" 7 771 ""
V L "num" 7 771 "sint32" `867 
V L "base" 7 771 "int8" `868 
V L "s" 7 771 "*int8" `940 
F G "itoa" 7 772 "*int8(sint32 num,int8 base,*int8 s)" `866 
V L "temp" 7 773 "int32" `937 
V L "i" 7 774 "int8" `938 
V L "sign" 7 774 "int8" `939 
V L "cnt" 7 774 "int8" `940 
V L "c" 7 775 "int8" `941 
C L "itoa" 7 398 1 "FUNCTION"
C L "itoa" 7 398 1 "FUNCTION"
C L "itoa" 7 398 1 "FUNCTION"
C L "itoa" 7 398 1 "FUNCTION"
C L "itoa" 7 398 1 "FUNCTION"
F N "strtof" 7 886 ""
V L "s" 7 886 "*int8" `881 
V L "endptr" 7 886 "??0 *" `950 
F G "strtof" 7 887 "float(*int8 s,??0 * endptr)" `880 
V L "pow10" 7 888 "float" `948 
V L "result" 7 889 "float" `949 
V L "skip" 7 890 "int1" `950 
V L "sign" 7 890 "int1" `951 
V L "point" 7 890 "int1" `952 
V L "c" 7 891 "int8" `953 
V L "ptr" 7 892 "int8" `954 
F N "strtoul" 7 1104 ""
V L "s" 7 1104 "*int8" `877 
V L "endptr" 7 1104 "*int8" `878 
V L "base" 7 1104 "sint8" `959 
F G "strtoul" 7 1105 "int16(*int8 s,*int8 endptr,sint8 base)" `876 
V L "sc" 7 1106 "*int8" `956 
V L "s1" 7 1106 "*int8" `957 
V L "sd" 7 1106 "*int8" `958 
V L "x" 7 1107 "int16" `959 
V L "sign" 7 1108 "int8" `960 
V L "digits" 7 1109 "int8[1]" `961 
C L "strtoul" 7 398 1 "FUNCTION"
C L "strtoul" 7 398 1 "FUNCTION"
C L "strtoul" 7 398 1 "FUNCTION"
F N "strtol" 7 1166 ""
V L "s" 7 1166 "*int8" `873 
V L "endptr" 7 1166 "*int8" `874 
V L "base" 7 1166 "sint8" `966 
F G "strtol" 7 1167 "sint16(*int8 s,*int8 endptr,sint8 base)" `872 
V L "sc" 7 1168 "*int8" `963 
V L "s1" 7 1168 "*int8" `964 
V L "sd" 7 1168 "*int8" `965 
V L "x" 7 1169 "sint16" `966 
V L "sign" 7 1170 "int8" `967 
V L "digits" 7 1171 "int8[1]" `968 
C L "strtol" 7 398 1 "FUNCTION"
C L "strtol" 7 398 1 "FUNCTION"
C L "strtol" 7 398 1 "FUNCTION"
F N "system" 7 1229 ""
V L "string" 7 1229 "*int8" `971 
F G "system" 7 1230 "sint8(*int8 string)" `889 
F N "mblen" 7 1234 ""
V L "s" 7 1234 "*int8" `971 
V L "n" 7 1234 "int16" `972 
F G "mblen" 7 1235 "int16(*int8 s,int16 n)" `970 
F N "mbtowc" 7 1239 ""
V L "pwc" 7 1239 "*int8" `974 
V L "s" 7 1239 "*int8" `975 
V L "n" 7 1239 "int16" `976 
F G "mbtowc" 7 1240 "int8(*int8 pwc,*int8 s,int16 n)" `973 
F N "wctomb" 7 1245 ""
V L "s" 7 1245 "*int8" `978 
V L "wchar" 7 1245 "int8" `979 
F G "wctomb" 7 1246 "int8(*int8 s,int8 wchar)" `977 
F N "mbstowcs" 7 1251 ""
V L "pwcs" 7 1251 "*int8" `981 
V L "s" 7 1251 "*int8" `982 
V L "n" 7 1251 "int16" `983 
F G "mbstowcs" 7 1252 "int16(*int8 pwcs,*int8 s,int16 n)" `980 
F N "wcstombs" 7 1257 ""
V L "s" 7 1257 "*int8" `985 
V L "pwcs" 7 1257 "*int8" `986 
V L "n" 7 1257 "int16" `987 
F G "wcstombs" 7 1258 "int16(*int8 s,*int8 pwcs,int16 n)" `984 
V G "_Randseed" 7 1267 "int32" `988 
F N "rand" 7 1269 ""
F G "rand" 7 1270 "int16()" `886 
F N "srand" 7 1275 ""
V L "seed" 7 1275 "int32" `993 
F G "srand" 7 1276 "void(int32 seed)" `887 
F N "*_Cmpfun" 7 1285 ""
V L "p1" 7 1285 "*int8" `993 
V L "p2" 7 1285 "*int8" `994 
T G "*_Cmpfun" 7 1285 "sint8(*int8 p1,*int8 p2)" `992 
F N "qsort" 7 1292 ""
V L "qdata" 7 1292 "*int8" `997 
V L "qitems" 7 1292 "int8" `998 
V L "qsize" 7 1292 "int8" `999 
V L "cmp" 7 1292 "_Cmpfun" `1000 
F G "qsort" 7 1292 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)" `996 
V L "m" 7 1293 "int8" `1001 
V L "j" 7 1293 "int8" `1002 
V L "i" 7 1293 "int8" `1003 
V L "l" 7 1293 "int8" `1004 
V L "done" 7 1294 "int1" `1005 
V L "t" 7 1295 "int8[16]" `1006 
F N "bsearch" 7 1320 ""
V L "key" 7 1320 "*int8" `1009 
V L "base" 7 1320 "*int8" `1010 
V L "num" 7 1320 "int16" `1011 
V L "width" 7 1320 "int16" `1012 
V L "cmp" 7 1320 "_Cmpfun" `1013 
F G "bsearch" 7 1321 "*int8(*int8 key,*int8 base,int16 num,int16 width,_Cmpfun cmp)" `1008 
V L "p" 7 1322 "*int8" `1014 
V L "q" 7 1322 "*int8" `1015 
V L "n" 7 1323 "int16" `1016 
V L "pivot" 7 1324 "int16" `1017 
V L "val" 7 1325 "sint8" `1018 
C L "bsearch" 7 398 1 "FUNCTION"
D G "__LCD_C__" 8 76 ""
T G "LCD_PIN_MAP" 8 90 "{int1 enable,int1 rs,int1 rw,int1 unused,int4 data}" `1028  "this is to improve compatability with previous LCD drivers that accepted"
D G "lcd_output_enable" 8 109 "(x) lcdlat.enable=x"
D G "lcd_enable_tris" 8 110 "()   lcdtris.enable=0"
D G "lcd_output_rs" 8 117 "(x) lcdlat.rs=x"
D G "lcd_rs_tris" 8 118 "()   lcdtris.rs=0"
D G "lcd_output_rw" 8 125 "(x) lcdlat.rw=x"
D G "lcd_rw_tris" 8 126 "()   lcdtris.rw=0"
D G "LCD_DATA_PORT" 8 149 "getenv("SFR:PORTD")" "portd"
V G "lcd" 8 166 "LCD_PIN_MAP" `1029 
V G "lcdlat" 8 166 "LCD_PIN_MAP" `1030 
V G "lcdtris" 8 166 "LCD_PIN_MAP" `1031 
D G "LCD_TYPE" 8 179 "2" "0=5x7, 1=5x10, 2=2 lines"
D G "LCD_LINE_TWO" 8 183 "0x40" "LCD RAM address for the second line"
D G "LCD_LINE_LENGTH" 8 187 "20"
F N "lcd_read_nibble" 8 190 ""
f G "lcd_read_nibble" 8 190 "int8()" `1032 
F N "lcd_read_byte" 8 192 ""
F G "lcd_read_byte" 8 193 "int8()" `1033 
V L "low" 8 194 "int8" `1034 
V L "high" 8 194 "int8" `1035 
F N "lcd_read_nibble" 8 239 ""
F G "lcd_read_nibble" 8 240 "int8()" `1032 
F N "lcd_send_nibble" 8 256 ""
V L "n" 8 256 "int8" `1037 
F G "lcd_send_nibble" 8 257 "void(int8 n)" `1036 
F N "lcd_send_byte" 8 274 ""
V L "address" 8 274 "int8" `1039 
V L "n" 8 274 "int8" `1040 
F G "lcd_send_byte" 8 275 "void(int8 address,int8 n)" `1038 
F N "lcd_init" 8 299 ""
F G "lcd_init" 8 300 "void()" `1041 
V L "i" 8 301 "int8" `1042 
V L "LCD_INIT_STRING" 8 302 "int8[4]" `1043 
C L "lcd_init" 8 2 2 "FUNCTION"
F N "lcd_gotoxy" 8 345 ""
V L "x" 8 345 "int8" `1045 
V L "y" 8 345 "int8" `1046 
F G "lcd_gotoxy" 8 346 "void(int8 x,int8 y)" `1044 
V L "address" 8 347 "int8" `1047 
F N "lcd_putc" 8 363 ""
V L "c" 8 363 "int8" `1049 
F G "lcd_putc" 8 364 "void(int8 c)" `1048 
F N "lcd_getc" 8 406 ""
V L "x" 8 406 "int8" `1051 
V L "y" 8 406 "int8" `1052 
F G "lcd_getc" 8 407 "int8(int8 x,int8 y)" `1050 
V L "value" 8 408 "int8" `1053 
C L "lcd_getc" 8 2 1 "FUNCTION"
C L "lcd_set_cgram_char" 8 2 5 "FUNCTION"
F N "lcd_set_cgram_char" 8 424 ""
V L "which" 8 424 "int8" `1055 
V L "ptr" 8 424 "*int8" `1056 
F G "lcd_set_cgram_char" 8 425 "void(int8 which,*int8 ptr)" `1054 
V L "i" 8 426 "int8" `1057 
C L "lcd_set_cgram_char" 8 2 1 "FUNCTION"
F N "lcd_cursor_on" 8 443 ""
V L "on" 8 443 "int8" `1059 
F G "lcd_cursor_on" 8 444 "void(int8 on)" `1058 
C L "lcd_cursor_on" 8 2 1 "FUNCTION"
C L "lcd_cursor_on" 8 2 1 "FUNCTION"
D G "CONV_CST" 0 7 "0.48875855327"
D G "TENS_DISPLAY" 0 8 "PIN_E0"
D G "UNITY_DISPLAY" 0 9 "PIN_E1"
D G "GREEN_LED" 0 10 "PIN_C0"
D G "RED_LED" 0 11 "PIN_C1"
V G "treshld" 0 13 "int8" `1060 
F N "isr" 0 16 ""
F G "isr" 0 16 "void()" `1061 
V L "treshstr" 0 17 "int8[10]" `1062  "Read string from RS232"
C L "isr" 0 22 1 "FUNCTION"
F N "simpleBCDConverter" 0 26 ""
V L "value" 0 26 "int8" `1064 
F G "simpleBCDConverter" 0 26 "int8(int8 value)" `1063  "Shift tens from 4 bits to the left"
C L "simpleBCDConverter" 0 22 1 "FUNCTION"
C L "bitsToBCD" 0 32 1 "*"
F N "bitsToBCD" 0 35 ""
V L "value" 0 35 "int8" `1069 
F G "bitsToBCD" 0 35 "void(int8 value)" `1068 
V L "tens" 0 36 "int8" `1070 
V L "unity" 0 37 "int8" `1071 
C L "checkLed" 0 50 1 "*"
F N "checkLed" 0 53 ""
V L "temp" 0 53 "int8" `1073 
V L "treshld" 0 53 "int8" `1074 
F G "checkLed" 0 53 "void(int8 temp,int8 treshld)" `1072  "If temps is greater than treshold"
C L "checkLed" 0 50 1 "FUNCTION"
C L "checkLed" 0 50 1 "FUNCTION"
F N "MAIN" 0 64 ""
F G "MAIN" 0 65 "void()" `1075 
C L "MAIN" 0 50 1 "FUNCTION"
C L "MAIN" 0 50 1 "FUNCTION"
C L "MAIN" 0 50 1 "FUNCTION"
V L "lastTemperature" 0 75 "int8" `1078 
V L "currentTemperature" 0 76 "int8" `1079  "only sends treshold at start"
C L "MAIN" 0 50 4 "FUNCTION"
C L "MAIN" 0 50 1 "FUNCTION"
C L "MAIN" 0 50 2 "FUNCTION"
C L "MAIN" 0 50 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "scanf" 1 255
F B "fscanf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "_iosctrl" 1 2
F B "profileout" 1 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "interrupt_enabled" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "read_rom_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "strstr100" 2 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_d" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_d" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_d" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_d" 0 0
F B "get_tris_e" 0 0
F B "input_change_a" 0 0
F B "input_change_b" 0 0
F B "input_change_c" 0 0
F B "input_change_d" 0 0
F B "input_change_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_comparator" 1 0
F B "setup_port_a" 1 2
F B "setup_adc_ports" 1 2
F B "get_adc_ports" 0 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "set_analog_pins" 1 2
F B "get_capture" 0 1
F B "set_compare_time" 1 2
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_ccp2" 1 2
F B "set_pwm2_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 0 2
F B "pll_locked" 0 0
F B "setup_psp" 1 0
F B "psp_output_full" 0 0
F B "psp_input_full" 0 0
F B "psp_overflow" 0 0
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 2
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 2
F B "spi_data_is_in2" 0 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
